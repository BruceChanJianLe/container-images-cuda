ARG IMAGE_NAME
FROM ${IMAGE_NAME}:{{ cuda.version.major }}.{{ cuda.version.minor }}-{{ cuda.cudnn7.target }}-centos{{ cuda.os.version }}
LABEL maintainer "NVIDIA CORPORATION <cudatools@nvidia.com>"

ENV CUDNN_VERSION {{ cuda.cudnn7.version }}
LABEL com.nvidia.cudnn.version="${CUDNN_VERSION}"

# cuDNN license: https://developer.nvidia.com/cudnn/license_agreement
RUN CUDNN_DOWNLOAD_SUM={{ cuda.cudnn7.sha256sum }} && \
    curl -fsSL http://developer.download.nvidia.com/compute/redist/cudnn/v{{ cuda.cudnn7.version[:cuda.cudnn7.version.rfind(".")] }}/cudnn-{{ cuda.version.major }}.{{ cuda.version.minor }}-linux-x64-v{{ cuda.cudnn7.version }}.tgz -O && \
    echo "$CUDNN_DOWNLOAD_SUM  cudnn-{{ cuda.version.major }}.{{ cuda.version.minor }}-linux-x64-v{{ cuda.cudnn7.version }}.tgz" | sha256sum -c - && \
    tar --no-same-owner -xzf cudnn-{{ cuda.version.major }}.{{ cuda.version.minor }}-linux-x64-v{{ cuda.cudnn7.version }}.tgz -C /usr/local {% if cuda.cudnn7.target == "runtime" -%}--wildcards 'cuda/lib64/libcudnn.so.*' {% endif -%} && \
    rm cudnn-{{ cuda.version.major }}.{{ cuda.version.minor }}-linux-x64-v{{ cuda.cudnn7.version }}.tgz && \
    ldconfig

