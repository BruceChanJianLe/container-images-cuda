# - DO NOT EDIT - FILE IS AUTOGENERATED

# NOTE: The docker:stable-dind service is not used here because --add-runtime=nvidia does not work from DIND and we need the
#       runtime to perform tests

# Important gitlab-runner considerations
#
# Docker buildx is used for multi-arch images builds. This feature is currently experimental and
# must be explicitly enabled on the docker daemon performing the image builds.
#
# To run multi-arch images on x86_64, qemu-user-static and systemd are required with the following configuration:
#
# $ cat /etc/binfmt.d/qemu-static.conf
# :qemu-aarch64:M::\x7fELF\x02\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\xb7:\xff\xff\xff\xff\xff\xff\xff\x00\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff:/usr/bin/qemu-aarch64-static:CF
# :qemu-ppc64le:M::\x7fELF\x02\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x15\x00:\xff\xff\xff\xff\xff\xff\xff\x00\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\x00:/usr/bin/qemu-ppc64le-static:CF
#
# < reboot or start systemd-binfmt.service >
#
# Check with:
#
# $ systemctl status systemd-binfmt.service
# < service should be started >
#
# $ docker run -it nvidia/cuda-ppc64le:11.0-base-ubuntu18.04-rc
# < container should run>

variables:
  # Need a value of two here for checking the manifest in the last commit
  GIT_DEPTH: "2"

before_script:
  - 'echo "ARCH: $ARCH"'
  - 'echo "OS: $OS"'
  - 'echo "IMAGE_NAME: $IMAGE_NAME"'
  - 'echo "OS_NAME: $OS_NAME"'
  - 'echo "OS_VERSION: $OS_VERSION"'
  - 'echo "CUDA_VERSION: $CUDA_VERSION"'
  - 'echo "CUDNN_VERSION: $CUDNN_VERSION"'
  - 'echo "IMAGE_TAG_SUFFIX: $IMAGE_TAG_SUFFIX"'
  - 'echo "LATEST: $LATEST"'
  - 'echo "NO_OS_SUFFIX: $NO_OS_SUFFIX"'
  # Gitlab is used to stage images
  - docker login -u "gitlab-ci-token" -p $CI_JOB_TOKEN gitlab-master.nvidia.com:5005
  # Login to NGC to pull images
  - docker login -u '$oauthtoken' -p $NVCR_TOKEN nvcr.io

stages:
  - prepare
  # trigger stage is a workaround until https://gitlab.com/gitlab-org/gitlab-ce/issues/22972 is implemented
  - trigger
  - cuda
  - cudnn
  - test
  - scan
  - deploy
  - cleanup

# builds the gitlab-cuda-builder image
prepare:
  image: docker:stable
  stage: prepare
  script:
    - docker build -t gitlab-cuda-builder .
  tags:
    - cuda-docker
  only:
    refs:
      - master
    variables:
      - $TRIGGER == null
      - $TRIGGER_OVERRIDE

.tags_template: &tags_definition
  tags:
    - cuda-docker

# Only used for CUDA 8.0, will be removed once CUDA 8 support is dropped
.cuda_template_depricated: &cuda_definition_deprecated
  image: gitlab-cuda-builder
  stage: cuda
  retry: 2
  <<: *tags_definition
  script:
    - if [[ "${NO_OS_SUFFIX}" == "true" ]]; then
        export TAG_RUNTIME=" -t ${IMAGE_NAME}:${CUDA_VERSION}-runtime ";
        export TAG_DEVEL=" -t ${IMAGE_NAME}:${CUDA_VERSION}-devel ";
        export CUDA_TAGS="${CUDA_VERSION}-runtime ${CUDA_VERSION}-devel ";
      fi
    - if [[ -z $DIST_BASE_PATH ]]; then
        export DIST_BASE_PATH="dist/${OS}/${CUDA_VERSION}/${ARCH}";
      else
        export DIST_BASE_PATH="${DIST_BASE_PATH}/${OS}-${ARCH}";
      fi
    - docker buildx create --use --platform linux/${ARCH} --name cuda-${ARCH}
    - docker buildx build --pull --push --platform linux/${ARCH} -t "${IMAGE_NAME}:${CUDA_VERSION}-runtime-${OS}" ${TAG_RUNTIME} "${DIST_BASE_PATH}/runtime"
                          --build-arg BUILDKIT_INLINE_CACHE=1
                          --cache-from=type=registry,ref=${IMAGE_NAME}:${CUDA_VERSION}-runtime-${OS}
    - docker buildx build --pull --push --platform linux/${ARCH} -t "${IMAGE_NAME}:${CUDA_VERSION}-devel-${OS}" ${TAG_DEVEL} "${DIST_BASE_PATH}/devel"
                          --build-arg "IMAGE_NAME=${IMAGE_NAME}"
                          --build-arg BUILDKIT_INLINE_CACHE=1
                          --cache-from=type=registry,ref=${IMAGE_NAME}:${CUDA_VERSION}-devel-${OS}
    - 'echo "CUDA_TAGS=\"${CUDA_TAGS} ${CUDA_VERSION}-runtime-${OS} ${CUDA_VERSION}-devel-${OS}\"" >> tags.env'
    - cat tags.env
  artifacts:
    reports:
      dotenv: tags.env

.cuda_base_template: &cuda_base_definition
  image: gitlab-cuda-builder
  stage: cuda
  retry: 2
  <<: *tags_definition
  script:
    - if [[ "${NO_OS_SUFFIX}" == "true" ]]; then
        export TAG_BASE=" -t ${IMAGE_NAME}:${CUDA_VERSION}-base${IMAGE_TAG_SUFFIX} ";
        export TAG_RUNTIME=" -t ${IMAGE_NAME}:${CUDA_VERSION}-runtime${IMAGE_TAG_SUFFIX} ";
        export TAG_DEVEL=" -t ${IMAGE_NAME}:${CUDA_VERSION}-devel${IMAGE_TAG_SUFFIX} ";
        export CUDA_TAGS="${CUDA_VERSION}-base${IMAGE_TAG_SUFFIX} ${CUDA_VERSION}-runtime${IMAGE_TAG_SUFFIX} ${CUDA_VERSION}-devel${IMAGE_TAG_SUFFIX} ";
      fi
    - if [[ "${LATEST}" == "true" ]]; then
        export TAG_LATEST=" -t ${IMAGE_NAME}:latest ";
        export CUDA_TAGS="$CUDA_TAGS latest";
      fi
    - if [[ -z $DIST_BASE_PATH ]]; then
        export DIST_BASE_PATH="dist/${OS}/${CUDA_VERSION}/${ARCH}";
      else
        export DIST_BASE_PATH="${DIST_BASE_PATH}/${OS}-${ARCH}";
      fi
    - 'echo "DIST_BASE_PATH: ${DIST_BASE_PATH}"'
    - 'echo "TAG_LATEST: ${TAG_LATEST}"'
    - 'echo "TAG_BASE: ${TAG_BASE}"'
    - 'echo "TAG_RUNTIME: ${TAG_RUNTIME}"'
    - 'echo "TAG_DEVEL: ${TAG_DEVEL}"'
    - docker buildx create --use --platform linux/${ARCH} --name cuda-${ARCH}
    - docker buildx build --pull --push --platform linux/${ARCH} -t "${IMAGE_NAME}:${CUDA_VERSION}-base-${OS}${IMAGE_TAG_SUFFIX}" ${TAG_BASE} "${DIST_BASE_PATH}/base"
                          --build-arg BUILDKIT_INLINE_CACHE=1
                          --cache-from=type=registry,ref=${IMAGE_NAME}:${CUDA_VERSION}-base-${OS}${IMAGE_TAG_SUFFIX}
    - docker buildx build --pull --push --platform linux/${ARCH} -t "${IMAGE_NAME}:${CUDA_VERSION}-runtime-${OS}${IMAGE_TAG_SUFFIX}" ${TAG_RUNTIME}
                          --build-arg "IMAGE_NAME=${IMAGE_NAME}" "${DIST_BASE_PATH}/runtime"
                          --build-arg BUILDKIT_INLINE_CACHE=1
                          --cache-from=type=registry,ref=${IMAGE_NAME}:${CUDA_VERSION}-runtime-${OS}${IMAGE_TAG_SUFFIX}
    - docker buildx build --pull --push --platform linux/${ARCH} -t "${IMAGE_NAME}:${CUDA_VERSION}-devel-${OS}${IMAGE_TAG_SUFFIX}" ${TAG_DEVEL} ${TAG_LATEST}
                          --build-arg "IMAGE_NAME=${IMAGE_NAME}" "${DIST_BASE_PATH}/devel"
                          --build-arg BUILDKIT_INLINE_CACHE=1
                          --cache-from=type=registry,ref=${IMAGE_NAME}:${CUDA_VERSION}-devel-${OS}${IMAGE_TAG_SUFFIX}
    - 'echo "CUDA_TAGS=\"${CUDA_TAGS} ${CUDA_VERSION}-base-${OS}${IMAGE_TAG_SUFFIX} ${CUDA_VERSION}-runtime-${OS}${IMAGE_TAG_SUFFIX} ${CUDA_VERSION}-devel-${OS}${IMAGE_TAG_SUFFIX}\"" >> tags.env'
    - cat tags.env
  artifacts:
    reports:
      dotenv: tags.env

.cudnn_template: &cudnn_definition
  image: gitlab-cuda-builder
  stage: cudnn
  retry: 2
  <<: *tags_definition
  script:
    - if [[ -z $DIST_BASE_PATH ]]; then
        DIST_BASE_PATH="dist/${OS}/${CUDA_VERSION}/${ARCH}";
      else
        DIST_BASE_PATH="${DIST_BASE_PATH}/${OS}-${ARCH}";
      fi
    - 'echo "DIST_BASE_PATH: ${DIST_BASE_PATH}"'
    - if [[ "${NO_OS_SUFFIX}" == "true" ]]; then
        TAG_CUDNN_RUNTIME=" -t ${IMAGE_NAME}:${CUDA_VERSION}-${CUDNN_VERSION}-runtime${IMAGE_TAG_SUFFIX} ";
        TAG_CUDNN_DEVEL=" -t ${IMAGE_NAME}:${CUDA_VERSION}-${CUDNN_VERSION}-devel${IMAGE_TAG_SUFFIX} ";
        export CUDA_EXTRA_TAGS="${CUDA_EXTRA_TAGS} ${CUDA_VERSION}-${CUDNN_VERSION}-runtime${IMAGE_TAG_SUFFIX} ${CUDA_VERSION}-${CUDNN_VERSION}-devel${IMAGE_TAG_SUFFIX}";
      fi
    - docker buildx create --use --platform linux/${ARCH} --name cuda-${ARCH}
    - docker buildx build --pull --push --platform linux/${ARCH} -t "${IMAGE_NAME}:${CUDA_VERSION}-${CUDNN_VERSION}-runtime-${OS}${IMAGE_TAG_SUFFIX}" ${TAG_CUDNN_RUNTIME}
                  --build-arg "IMAGE_NAME=${IMAGE_NAME}" "${DIST_BASE_PATH}/runtime/${CUDNN_VERSION}"
                  --build-arg BUILDKIT_INLINE_CACHE=1
                  --cache-from=type=registry,ref=${IMAGE_NAME}:${CUDA_VERSION}-${CUDNN_VERSION}-runtime-${OS}${IMAGE_TAG_SUFFIX}
    - docker buildx build --pull --push --platform linux/${ARCH} -t "${IMAGE_NAME}:${CUDA_VERSION}-${CUDNN_VERSION}-devel-${OS}${IMAGE_TAG_SUFFIX}" ${TAG_CUDNN_DEVEL}
                  --build-arg "IMAGE_NAME=${IMAGE_NAME}" "${DIST_BASE_PATH}/devel/${CUDNN_VERSION}"
                  --build-arg BUILDKIT_INLINE_CACHE=1
                  --cache-from=type=registry,ref=${IMAGE_NAME}:${CUDA_VERSION}-${CUDNN_VERSION}-devel-${OS}${IMAGE_TAG_SUFFIX}
    # this is not a great way to pass information between stages, but it is currently the only way
    - 'echo "CUDA_TAGS=${CUDA_TAGS}" > ${CUDNN_VERSION}finaltags.env'
    - 'echo "CUDA_${CUDNN_VERSION}_TAGS=\"${CUDA_VERSION}-${CUDNN_VERSION}-devel-${OS}${IMAGE_TAG_SUFFIX} ${CUDA_VERSION}-${CUDNN_VERSION}-runtime-${OS}${IMAGE_TAG_SUFFIX}\"" >> ${CUDNN_VERSION}finaltags.env'
    - 'echo "CUDA_EXTRA_${CUDNN_VERSION}_TAGS=\"${CUDA_EXTRA_TAGS}\"" >> ${CUDNN_VERSION}finaltags.env'
    - cat ${CUDNN_VERSION}finaltags.env

.test_template: &test_definition
  image: gitlab-cuda-builder
  stage: test
  <<: *tags_definition
  script:
    - |
      # NO_TEST SET -- WAR until we have better needs/rules support in the pipelines
      if [[ -z $NO_TEST ]]; then
        bash -e ./test/scripts/bats_install.sh
        bash -e ./test/scripts/run_tests.sh
      else
        exit 0;
      fi


.scan_template: &scan_definition
  image: gitlab-cuda-builder
  stage: scan
  <<: *tags_definition
  script:
    # NO_SCAN SET - WAR until we have better needs/rules support in the pipelines
    - |
      if [[ -z $NO_SCAN ]]; then
        git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab-master.nvidia.com/sectooling/scanning/contamer.git
        cd contamer
        pip3 install -r requirements.txt
        docker pull ${IMAGE_NAME}:${CUDA_VERSION}-devel-${OS}${IMAGE_TAG_SUFFIX}

        python3 contamer.py -ls --fail-on-non-os ${IMAGE_NAME}:${CUDA_VERSION}-devel-${OS}${IMAGE_TAG_SUFFIX} \
            --suppress-vulns CVE-2020-14352 CVE-2020-15888 # librepo, lua-libs packages WAIVED via https://nvbugswb.nvidia.com/NvBugs5/SWBug.aspx?bugid=3028123&cmtNo=35

        export CONTAMER_RET=$?
        docker rmi -f ${IMAGE_NAME}:${CUDA_VERSION}-devel-${OS}${IMAGE_TAG_SUFFIX}
        if [[ $CONTAMER_RET -ne 0 ]]; then
          exit 1;
        else
          echo "Contamer return value: ${CONTAMER_RET}";
        fi
      else
        exit 0;
      fi

.deploy_template: &deploy_definition
  image: gitlab-cuda-builder
  stage: deploy
  <<: *tags_definition
  script:
    - for tag in $(env | grep 'CUDA.*_TAGS' | cut -f2 -d=); do
        echo ${tag//\"} >> TAG_MANIFEST;
      done
    - cat TAG_MANIFEST
    - python manager.py ${MANIFEST:+`echo "--manifest ${MANIFEST}"`} push
        --tag-manifest TAG_MANIFEST
        --image-name "${IMAGE_NAME}"
        --os "${OS_NAME}"
        --os-version "${OS_VERSION}"
        --cuda-version "${CUDA_VERSION}"
        --arch "${ARCH}"
        ${PIPELINE_NAME:+`echo "--pipeline-name ${PIPELINE_NAME}"`}
        ${IMAGE_TAG_SUFFIX:+`echo "--tag-suffix ${IMAGE_TAG_SUFFIX}"`} ${DRY_RUN:+"-n"}

trigger:
  image: gitlab-cuda-builder
  stage: trigger
  <<: *tags_definition
  variables:
    MANIFEST: "manifests/cuda.yaml"
  script:
    - echo CI_COMMIT_MESSAGE:$CI_COMMIT_MESSAGE
    - export ESC_TO=`echo $TRIGGER_OVERRIDE | sed 's/\ //g'`
    - export CMD="python manager.py ${MANIFEST:+`echo --manifest ${MANIFEST}`} trigger ${TRIGGER_OVERRIDE:+`echo --trigger-override ${ESC_TO}`}"
    - 'echo "COMMAND: $CMD"'
    - $CMD
  only:
    variables:
      - $TRIGGER == null
      - $TRIGGER_OVERRIDE

cleanup:
  image: gitlab-cuda-builder
  stage: cleanup
  <<: *tags_definition
  script:
    # Remove all of the images on the host pulled down for test
    - docker images | grep 'gitlab-master.nvidia.com:5005/cuda-installer' | awk '{ print $3 }' | xargs docker rmi
    - docker system prune -f
  rules:
    - if: '$TRIGGER == "true"'
      when: always

.ubuntu20_04_11_0_x86_64_variables: &ubuntu20_04_11_0_x86_64_variables
  ARCH: "x86_64"
  DIST_BASE_PATH: "dist/11.0"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda"
  MANIFEST: "manifests/cuda.yaml"
  LATEST: "true"
  NO_OS_SUFFIX: "true"
  OS: "ubuntu20.04"
  OS_NAME: "ubuntu"
  OS_VERSION: "20.04"
  CUDA_VERSION: "11.0"

.ubuntu20_04_11_0_x86_64_only: &ubuntu20_04_11_0_x86_64_only
  variables:
    <<: *ubuntu20_04_11_0_x86_64_variables
  only:
    variables:
      - $ubuntu20_04_11_0_x86_64 == "true"
      - $all == "true"

ubuntu20.04-v11.0-x86_64:
  <<: *cuda_base_definition
  <<: *ubuntu20_04_11_0_x86_64_only

ubuntu20.04-v11.0-test-x86_64:
  needs: ["ubuntu20.04-v11.0-x86_64"]
  <<: *test_definition
  <<: *ubuntu20_04_11_0_x86_64_only

ubuntu20.04-v11.0-scan-x86_64:
  needs: ["ubuntu20.04-v11.0-x86_64", "ubuntu20.04-v11.0-test-x86_64"]
  <<: *scan_definition
  <<: *ubuntu20_04_11_0_x86_64_only

ubuntu20.04-v11.0-deploy-x86_64:
  <<: *deploy_definition
  <<: *ubuntu20_04_11_0_x86_64_only
  needs:
    - job: ubuntu20.04-v11.0-test-x86_64
      artifacts: true
    - job: ubuntu20.04-v11.0-scan-x86_64

.ubuntu18_04_11_0_x86_64_variables: &ubuntu18_04_11_0_x86_64_variables
  ARCH: "x86_64"
  DIST_BASE_PATH: "dist/11.0"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda"
  MANIFEST: "manifests/cuda.yaml"
  OS: "ubuntu18.04"
  OS_NAME: "ubuntu"
  OS_VERSION: "18.04"
  CUDA_VERSION: "11.0"

.ubuntu18_04_11_0_x86_64_only: &ubuntu18_04_11_0_x86_64_only
  variables:
    <<: *ubuntu18_04_11_0_x86_64_variables
  only:
    variables:
      - $ubuntu18_04_11_0_x86_64 == "true"
      - $all == "true"

ubuntu18.04-v11.0-x86_64:
  <<: *cuda_base_definition
  <<: *ubuntu18_04_11_0_x86_64_only

ubuntu18.04-v11.0-cudnn8-x86_64:
  <<: *cudnn_definition
  <<: *ubuntu18_04_11_0_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubuntu18_04_11_0_x86_64_variables
    CUDNN_VERSION: "cudnn8"
  artifacts:
    reports:
      dotenv: cudnn8finaltags.env
  needs:
    - job: ubuntu18.04-v11.0-x86_64
      artifacts: true

ubuntu18.04-v11.0-test-x86_64:
  needs: ["ubuntu18.04-v11.0-x86_64"]
  <<: *test_definition
  <<: *ubuntu18_04_11_0_x86_64_only

ubuntu18.04-v11.0-scan-x86_64:
  needs: ["ubuntu18.04-v11.0-x86_64", "ubuntu18.04-v11.0-test-x86_64"]
  <<: *scan_definition
  <<: *ubuntu18_04_11_0_x86_64_only

ubuntu18.04-v11.0-deploy-x86_64:
  <<: *deploy_definition
  <<: *ubuntu18_04_11_0_x86_64_only
  needs:
    - job: ubuntu18.04-v11.0-test-x86_64
      artifacts: true
    - job: ubuntu18.04-v11.0-scan-x86_64
    - job: ubuntu18.04-v11.0-cudnn8-x86_64

.ubuntu18_04_11_0_ppc64le_variables: &ubuntu18_04_11_0_ppc64le_variables
  ARCH: "ppc64le"
  DIST_BASE_PATH: "dist/11.0"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda/cuda-ppc64le"
  MANIFEST: "manifests/cuda.yaml"
  LATEST: "true"
  NO_OS_SUFFIX: "true"
  OS: "ubuntu18.04"
  OS_NAME: "ubuntu"
  OS_VERSION: "18.04"
  CUDA_VERSION: "11.0"

.ubuntu18_04_11_0_ppc64le_only: &ubuntu18_04_11_0_ppc64le_only
  variables:
    <<: *ubuntu18_04_11_0_ppc64le_variables
  only:
    variables:
      - $ubuntu18_04_11_0_ppc64le == "true"
      - $all == "true"

ubuntu18.04-v11.0-ppc64le:
  <<: *cuda_base_definition
  <<: *ubuntu18_04_11_0_ppc64le_only

ubuntu18.04-v11.0-cudnn8-ppc64le:
  <<: *cudnn_definition
  <<: *ubuntu18_04_11_0_ppc64le_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubuntu18_04_11_0_ppc64le_variables
    CUDNN_VERSION: "cudnn8"
  artifacts:
    reports:
      dotenv: cudnn8finaltags.env
  needs:
    - job: ubuntu18.04-v11.0-ppc64le
      artifacts: true

ubuntu18.04-v11.0-test-ppc64le:
  needs: ["ubuntu18.04-v11.0-ppc64le"]
  <<: *test_definition
  <<: *ubuntu18_04_11_0_ppc64le_only

ubuntu18.04-v11.0-scan-ppc64le:
  needs: ["ubuntu18.04-v11.0-ppc64le", "ubuntu18.04-v11.0-test-ppc64le"]
  <<: *scan_definition
  <<: *ubuntu18_04_11_0_ppc64le_only

ubuntu18.04-v11.0-deploy-ppc64le:
  <<: *deploy_definition
  <<: *ubuntu18_04_11_0_ppc64le_only
  needs:
    - job: ubuntu18.04-v11.0-test-ppc64le
      artifacts: true
    - job: ubuntu18.04-v11.0-scan-ppc64le
    - job: ubuntu18.04-v11.0-cudnn8-ppc64le

.ubuntu18_04_11_0_arm64_variables: &ubuntu18_04_11_0_arm64_variables
  ARCH: "arm64"
  DIST_BASE_PATH: "dist/11.0"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda/cuda-arm64"
  MANIFEST: "manifests/cuda.yaml"
  LATEST: "true"
  NO_OS_SUFFIX: "true"
  OS: "ubuntu18.04"
  OS_NAME: "ubuntu"
  OS_VERSION: "18.04"
  CUDA_VERSION: "11.0"

.ubuntu18_04_11_0_arm64_only: &ubuntu18_04_11_0_arm64_only
  variables:
    <<: *ubuntu18_04_11_0_arm64_variables
  only:
    variables:
      - $ubuntu18_04_11_0_arm64 == "true"
      - $all == "true"

ubuntu18.04-v11.0-arm64:
  <<: *cuda_base_definition
  <<: *ubuntu18_04_11_0_arm64_only

ubuntu18.04-v11.0-test-arm64:
  needs: ["ubuntu18.04-v11.0-arm64"]
  <<: *test_definition
  <<: *ubuntu18_04_11_0_arm64_only

ubuntu18.04-v11.0-scan-arm64:
  needs: ["ubuntu18.04-v11.0-arm64", "ubuntu18.04-v11.0-test-arm64"]
  <<: *scan_definition
  <<: *ubuntu18_04_11_0_arm64_only

ubuntu18.04-v11.0-deploy-arm64:
  <<: *deploy_definition
  <<: *ubuntu18_04_11_0_arm64_only
  needs:
    - job: ubuntu18.04-v11.0-test-arm64
      artifacts: true
    - job: ubuntu18.04-v11.0-scan-arm64

.ubuntu16_04_11_0_x86_64_variables: &ubuntu16_04_11_0_x86_64_variables
  ARCH: "x86_64"
  DIST_BASE_PATH: "dist/11.0"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda"
  MANIFEST: "manifests/cuda.yaml"
  OS: "ubuntu16.04"
  OS_NAME: "ubuntu"
  OS_VERSION: "16.04"
  CUDA_VERSION: "11.0"

.ubuntu16_04_11_0_x86_64_only: &ubuntu16_04_11_0_x86_64_only
  variables:
    <<: *ubuntu16_04_11_0_x86_64_variables
  only:
    variables:
      - $ubuntu16_04_11_0_x86_64 == "true"
      - $all == "true"

ubuntu16.04-v11.0-x86_64:
  <<: *cuda_base_definition
  <<: *ubuntu16_04_11_0_x86_64_only

ubuntu16.04-v11.0-cudnn8-x86_64:
  <<: *cudnn_definition
  <<: *ubuntu16_04_11_0_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubuntu16_04_11_0_x86_64_variables
    CUDNN_VERSION: "cudnn8"
  artifacts:
    reports:
      dotenv: cudnn8finaltags.env
  needs:
    - job: ubuntu16.04-v11.0-x86_64
      artifacts: true

ubuntu16.04-v11.0-test-x86_64:
  needs: ["ubuntu16.04-v11.0-x86_64"]
  <<: *test_definition
  <<: *ubuntu16_04_11_0_x86_64_only

ubuntu16.04-v11.0-scan-x86_64:
  needs: ["ubuntu16.04-v11.0-x86_64", "ubuntu16.04-v11.0-test-x86_64"]
  <<: *scan_definition
  <<: *ubuntu16_04_11_0_x86_64_only

ubuntu16.04-v11.0-deploy-x86_64:
  <<: *deploy_definition
  <<: *ubuntu16_04_11_0_x86_64_only
  needs:
    - job: ubuntu16.04-v11.0-test-x86_64
      artifacts: true
    - job: ubuntu16.04-v11.0-scan-x86_64
    - job: ubuntu16.04-v11.0-cudnn8-x86_64

.centos8_11_0_x86_64_variables: &centos8_11_0_x86_64_variables
  ARCH: "x86_64"
  DIST_BASE_PATH: "dist/11.0"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda"
  MANIFEST: "manifests/cuda.yaml"
  OS: "centos8"
  OS_NAME: "centos"
  OS_VERSION: "8"
  CUDA_VERSION: "11.0"

.centos8_11_0_x86_64_only: &centos8_11_0_x86_64_only
  variables:
    <<: *centos8_11_0_x86_64_variables
  only:
    variables:
      - $centos8_11_0_x86_64 == "true"
      - $all == "true"

centos8-v11.0-x86_64:
  <<: *cuda_base_definition
  <<: *centos8_11_0_x86_64_only

centos8-v11.0-cudnn8-x86_64:
  <<: *cudnn_definition
  <<: *centos8_11_0_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *centos8_11_0_x86_64_variables
    CUDNN_VERSION: "cudnn8"
  artifacts:
    reports:
      dotenv: cudnn8finaltags.env
  needs:
    - job: centos8-v11.0-x86_64
      artifacts: true

centos8-v11.0-test-x86_64:
  needs: ["centos8-v11.0-x86_64"]
  <<: *test_definition
  <<: *centos8_11_0_x86_64_only

centos8-v11.0-scan-x86_64:
  needs: ["centos8-v11.0-x86_64", "centos8-v11.0-test-x86_64"]
  <<: *scan_definition
  <<: *centos8_11_0_x86_64_only

centos8-v11.0-deploy-x86_64:
  <<: *deploy_definition
  <<: *centos8_11_0_x86_64_only
  needs:
    - job: centos8-v11.0-test-x86_64
      artifacts: true
    - job: centos8-v11.0-scan-x86_64
    - job: centos8-v11.0-cudnn8-x86_64

.centos8_11_0_ppc64le_variables: &centos8_11_0_ppc64le_variables
  ARCH: "ppc64le"
  DIST_BASE_PATH: "dist/11.0"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda/cuda-ppc64le"
  MANIFEST: "manifests/cuda.yaml"
  OS: "centos8"
  OS_NAME: "centos"
  OS_VERSION: "8"
  CUDA_VERSION: "11.0"

.centos8_11_0_ppc64le_only: &centos8_11_0_ppc64le_only
  variables:
    <<: *centos8_11_0_ppc64le_variables
  only:
    variables:
      - $centos8_11_0_ppc64le == "true"
      - $all == "true"

centos8-v11.0-ppc64le:
  <<: *cuda_base_definition
  <<: *centos8_11_0_ppc64le_only

centos8-v11.0-cudnn8-ppc64le:
  <<: *cudnn_definition
  <<: *centos8_11_0_ppc64le_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *centos8_11_0_ppc64le_variables
    CUDNN_VERSION: "cudnn8"
  artifacts:
    reports:
      dotenv: cudnn8finaltags.env
  needs:
    - job: centos8-v11.0-ppc64le
      artifacts: true

centos8-v11.0-test-ppc64le:
  needs: ["centos8-v11.0-ppc64le"]
  <<: *test_definition
  <<: *centos8_11_0_ppc64le_only

centos8-v11.0-scan-ppc64le:
  needs: ["centos8-v11.0-ppc64le", "centos8-v11.0-test-ppc64le"]
  <<: *scan_definition
  <<: *centos8_11_0_ppc64le_only

centos8-v11.0-deploy-ppc64le:
  <<: *deploy_definition
  <<: *centos8_11_0_ppc64le_only
  needs:
    - job: centos8-v11.0-test-ppc64le
      artifacts: true
    - job: centos8-v11.0-scan-ppc64le
    - job: centos8-v11.0-cudnn8-ppc64le

.centos8_11_0_arm64_variables: &centos8_11_0_arm64_variables
  ARCH: "arm64"
  DIST_BASE_PATH: "dist/11.0"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda/cuda-arm64"
  MANIFEST: "manifests/cuda.yaml"
  OS: "centos8"
  OS_NAME: "centos"
  OS_VERSION: "8"
  CUDA_VERSION: "11.0"

.centos8_11_0_arm64_only: &centos8_11_0_arm64_only
  variables:
    <<: *centos8_11_0_arm64_variables
  only:
    variables:
      - $centos8_11_0_arm64 == "true"
      - $all == "true"

centos8-v11.0-arm64:
  <<: *cuda_base_definition
  <<: *centos8_11_0_arm64_only

centos8-v11.0-test-arm64:
  needs: ["centos8-v11.0-arm64"]
  <<: *test_definition
  <<: *centos8_11_0_arm64_only

centos8-v11.0-scan-arm64:
  needs: ["centos8-v11.0-arm64", "centos8-v11.0-test-arm64"]
  <<: *scan_definition
  <<: *centos8_11_0_arm64_only

centos8-v11.0-deploy-arm64:
  <<: *deploy_definition
  <<: *centos8_11_0_arm64_only
  needs:
    - job: centos8-v11.0-test-arm64
      artifacts: true
    - job: centos8-v11.0-scan-arm64

.centos7_11_0_x86_64_variables: &centos7_11_0_x86_64_variables
  ARCH: "x86_64"
  DIST_BASE_PATH: "dist/11.0"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda"
  MANIFEST: "manifests/cuda.yaml"
  OS: "centos7"
  OS_NAME: "centos"
  OS_VERSION: "7"
  CUDA_VERSION: "11.0"

.centos7_11_0_x86_64_only: &centos7_11_0_x86_64_only
  variables:
    <<: *centos7_11_0_x86_64_variables
  only:
    variables:
      - $centos7_11_0_x86_64 == "true"
      - $all == "true"

centos7-v11.0-x86_64:
  <<: *cuda_base_definition
  <<: *centos7_11_0_x86_64_only

centos7-v11.0-cudnn8-x86_64:
  <<: *cudnn_definition
  <<: *centos7_11_0_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *centos7_11_0_x86_64_variables
    CUDNN_VERSION: "cudnn8"
  artifacts:
    reports:
      dotenv: cudnn8finaltags.env
  needs:
    - job: centos7-v11.0-x86_64
      artifacts: true

centos7-v11.0-test-x86_64:
  needs: ["centos7-v11.0-x86_64"]
  <<: *test_definition
  <<: *centos7_11_0_x86_64_only

centos7-v11.0-scan-x86_64:
  needs: ["centos7-v11.0-x86_64", "centos7-v11.0-test-x86_64"]
  <<: *scan_definition
  <<: *centos7_11_0_x86_64_only

centos7-v11.0-deploy-x86_64:
  <<: *deploy_definition
  <<: *centos7_11_0_x86_64_only
  needs:
    - job: centos7-v11.0-test-x86_64
      artifacts: true
    - job: centos7-v11.0-scan-x86_64
    - job: centos7-v11.0-cudnn8-x86_64

.ubi8_11_0_x86_64_variables: &ubi8_11_0_x86_64_variables
  ARCH: "x86_64"
  DIST_BASE_PATH: "dist/11.0"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda"
  MANIFEST: "manifests/cuda.yaml"
  OS: "ubi8"
  OS_NAME: "ubi"
  OS_VERSION: "8"
  CUDA_VERSION: "11.0"

.ubi8_11_0_x86_64_only: &ubi8_11_0_x86_64_only
  variables:
    <<: *ubi8_11_0_x86_64_variables
  only:
    variables:
      - $ubi8_11_0_x86_64 == "true"
      - $all == "true"

ubi8-v11.0-x86_64:
  <<: *cuda_base_definition
  <<: *ubi8_11_0_x86_64_only

ubi8-v11.0-cudnn8-x86_64:
  <<: *cudnn_definition
  <<: *ubi8_11_0_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubi8_11_0_x86_64_variables
    CUDNN_VERSION: "cudnn8"
  artifacts:
    reports:
      dotenv: cudnn8finaltags.env
  needs:
    - job: ubi8-v11.0-x86_64
      artifacts: true

ubi8-v11.0-test-x86_64:
  needs: ["ubi8-v11.0-x86_64"]
  <<: *test_definition
  <<: *ubi8_11_0_x86_64_only

ubi8-v11.0-scan-x86_64:
  needs: ["ubi8-v11.0-x86_64", "ubi8-v11.0-test-x86_64"]
  <<: *scan_definition
  <<: *ubi8_11_0_x86_64_only

ubi8-v11.0-deploy-x86_64:
  <<: *deploy_definition
  <<: *ubi8_11_0_x86_64_only
  needs:
    - job: ubi8-v11.0-test-x86_64
      artifacts: true
    - job: ubi8-v11.0-scan-x86_64
    - job: ubi8-v11.0-cudnn8-x86_64

.ubi8_11_0_ppc64le_variables: &ubi8_11_0_ppc64le_variables
  ARCH: "ppc64le"
  DIST_BASE_PATH: "dist/11.0"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda/cuda-ppc64le"
  MANIFEST: "manifests/cuda.yaml"
  OS: "ubi8"
  OS_NAME: "ubi"
  OS_VERSION: "8"
  CUDA_VERSION: "11.0"

.ubi8_11_0_ppc64le_only: &ubi8_11_0_ppc64le_only
  variables:
    <<: *ubi8_11_0_ppc64le_variables
  only:
    variables:
      - $ubi8_11_0_ppc64le == "true"
      - $all == "true"

ubi8-v11.0-ppc64le:
  <<: *cuda_base_definition
  <<: *ubi8_11_0_ppc64le_only

ubi8-v11.0-cudnn8-ppc64le:
  <<: *cudnn_definition
  <<: *ubi8_11_0_ppc64le_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubi8_11_0_ppc64le_variables
    CUDNN_VERSION: "cudnn8"
  artifacts:
    reports:
      dotenv: cudnn8finaltags.env
  needs:
    - job: ubi8-v11.0-ppc64le
      artifacts: true

ubi8-v11.0-test-ppc64le:
  needs: ["ubi8-v11.0-ppc64le"]
  <<: *test_definition
  <<: *ubi8_11_0_ppc64le_only

ubi8-v11.0-scan-ppc64le:
  needs: ["ubi8-v11.0-ppc64le", "ubi8-v11.0-test-ppc64le"]
  <<: *scan_definition
  <<: *ubi8_11_0_ppc64le_only

ubi8-v11.0-deploy-ppc64le:
  <<: *deploy_definition
  <<: *ubi8_11_0_ppc64le_only
  needs:
    - job: ubi8-v11.0-test-ppc64le
      artifacts: true
    - job: ubi8-v11.0-scan-ppc64le
    - job: ubi8-v11.0-cudnn8-ppc64le

.ubi8_11_0_arm64_variables: &ubi8_11_0_arm64_variables
  ARCH: "arm64"
  DIST_BASE_PATH: "dist/11.0"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda/cuda-arm64"
  MANIFEST: "manifests/cuda.yaml"
  OS: "ubi8"
  OS_NAME: "ubi"
  OS_VERSION: "8"
  CUDA_VERSION: "11.0"

.ubi8_11_0_arm64_only: &ubi8_11_0_arm64_only
  variables:
    <<: *ubi8_11_0_arm64_variables
  only:
    variables:
      - $ubi8_11_0_arm64 == "true"
      - $all == "true"

ubi8-v11.0-arm64:
  <<: *cuda_base_definition
  <<: *ubi8_11_0_arm64_only

ubi8-v11.0-test-arm64:
  needs: ["ubi8-v11.0-arm64"]
  <<: *test_definition
  <<: *ubi8_11_0_arm64_only

ubi8-v11.0-scan-arm64:
  needs: ["ubi8-v11.0-arm64", "ubi8-v11.0-test-arm64"]
  <<: *scan_definition
  <<: *ubi8_11_0_arm64_only

ubi8-v11.0-deploy-arm64:
  <<: *deploy_definition
  <<: *ubi8_11_0_arm64_only
  needs:
    - job: ubi8-v11.0-test-arm64
      artifacts: true
    - job: ubi8-v11.0-scan-arm64

.ubi7_11_0_x86_64_variables: &ubi7_11_0_x86_64_variables
  ARCH: "x86_64"
  DIST_BASE_PATH: "dist/11.0"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda"
  MANIFEST: "manifests/cuda.yaml"
  OS: "ubi7"
  OS_NAME: "ubi"
  OS_VERSION: "7"
  CUDA_VERSION: "11.0"

.ubi7_11_0_x86_64_only: &ubi7_11_0_x86_64_only
  variables:
    <<: *ubi7_11_0_x86_64_variables
  only:
    variables:
      - $ubi7_11_0_x86_64 == "true"
      - $all == "true"

ubi7-v11.0-x86_64:
  <<: *cuda_base_definition
  <<: *ubi7_11_0_x86_64_only

ubi7-v11.0-cudnn8-x86_64:
  <<: *cudnn_definition
  <<: *ubi7_11_0_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubi7_11_0_x86_64_variables
    CUDNN_VERSION: "cudnn8"
  artifacts:
    reports:
      dotenv: cudnn8finaltags.env
  needs:
    - job: ubi7-v11.0-x86_64
      artifacts: true

ubi7-v11.0-test-x86_64:
  needs: ["ubi7-v11.0-x86_64"]
  <<: *test_definition
  <<: *ubi7_11_0_x86_64_only

ubi7-v11.0-scan-x86_64:
  needs: ["ubi7-v11.0-x86_64", "ubi7-v11.0-test-x86_64"]
  <<: *scan_definition
  <<: *ubi7_11_0_x86_64_only

ubi7-v11.0-deploy-x86_64:
  <<: *deploy_definition
  <<: *ubi7_11_0_x86_64_only
  needs:
    - job: ubi7-v11.0-test-x86_64
      artifacts: true
    - job: ubi7-v11.0-scan-x86_64
    - job: ubi7-v11.0-cudnn8-x86_64

.ubuntu18_04_10_2_x86_64_variables: &ubuntu18_04_10_2_x86_64_variables
  ARCH: "x86_64"
  DIST_BASE_PATH: "dist/10.2"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda"
  MANIFEST: "manifests/cuda.yaml"
  NO_OS_SUFFIX: "true"
  OS: "ubuntu18.04"
  OS_NAME: "ubuntu"
  OS_VERSION: "18.04"
  CUDA_VERSION: "10.2"

.ubuntu18_04_10_2_x86_64_only: &ubuntu18_04_10_2_x86_64_only
  variables:
    <<: *ubuntu18_04_10_2_x86_64_variables
  only:
    variables:
      - $ubuntu18_04_10_2_x86_64 == "true"
      - $all == "true"

ubuntu18.04-v10.2-x86_64:
  <<: *cuda_base_definition
  <<: *ubuntu18_04_10_2_x86_64_only

ubuntu18.04-v10.2-cudnn8-x86_64:
  <<: *cudnn_definition
  <<: *ubuntu18_04_10_2_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubuntu18_04_10_2_x86_64_variables
    CUDNN_VERSION: "cudnn8"
  artifacts:
    reports:
      dotenv: cudnn8finaltags.env
  needs:
    - job: ubuntu18.04-v10.2-x86_64
      artifacts: true

ubuntu18.04-v10.2-cudnn7-x86_64:
  <<: *cudnn_definition
  <<: *ubuntu18_04_10_2_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubuntu18_04_10_2_x86_64_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: ubuntu18.04-v10.2-x86_64
      artifacts: true

ubuntu18.04-v10.2-test-x86_64:
  needs: ["ubuntu18.04-v10.2-x86_64"]
  <<: *test_definition
  <<: *ubuntu18_04_10_2_x86_64_only

ubuntu18.04-v10.2-scan-x86_64:
  needs: ["ubuntu18.04-v10.2-x86_64", "ubuntu18.04-v10.2-test-x86_64"]
  <<: *scan_definition
  <<: *ubuntu18_04_10_2_x86_64_only

ubuntu18.04-v10.2-deploy-x86_64:
  <<: *deploy_definition
  <<: *ubuntu18_04_10_2_x86_64_only
  needs:
    - job: ubuntu18.04-v10.2-test-x86_64
      artifacts: true
    - job: ubuntu18.04-v10.2-scan-x86_64
    - job: ubuntu18.04-v10.2-cudnn8-x86_64
    - job: ubuntu18.04-v10.2-cudnn7-x86_64

.ubuntu18_04_10_2_ppc64le_variables: &ubuntu18_04_10_2_ppc64le_variables
  ARCH: "ppc64le"
  DIST_BASE_PATH: "dist/10.2"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda/cuda-ppc64le"
  MANIFEST: "manifests/cuda.yaml"
  NO_OS_SUFFIX: "true"
  OS: "ubuntu18.04"
  OS_NAME: "ubuntu"
  OS_VERSION: "18.04"
  CUDA_VERSION: "10.2"

.ubuntu18_04_10_2_ppc64le_only: &ubuntu18_04_10_2_ppc64le_only
  variables:
    <<: *ubuntu18_04_10_2_ppc64le_variables
  only:
    variables:
      - $ubuntu18_04_10_2_ppc64le == "true"
      - $all == "true"

ubuntu18.04-v10.2-ppc64le:
  <<: *cuda_base_definition
  <<: *ubuntu18_04_10_2_ppc64le_only

ubuntu18.04-v10.2-cudnn8-ppc64le:
  <<: *cudnn_definition
  <<: *ubuntu18_04_10_2_ppc64le_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubuntu18_04_10_2_ppc64le_variables
    CUDNN_VERSION: "cudnn8"
  artifacts:
    reports:
      dotenv: cudnn8finaltags.env
  needs:
    - job: ubuntu18.04-v10.2-ppc64le
      artifacts: true

ubuntu18.04-v10.2-cudnn7-ppc64le:
  <<: *cudnn_definition
  <<: *ubuntu18_04_10_2_ppc64le_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubuntu18_04_10_2_ppc64le_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: ubuntu18.04-v10.2-ppc64le
      artifacts: true

ubuntu18.04-v10.2-test-ppc64le:
  needs: ["ubuntu18.04-v10.2-ppc64le"]
  <<: *test_definition
  <<: *ubuntu18_04_10_2_ppc64le_only

ubuntu18.04-v10.2-scan-ppc64le:
  needs: ["ubuntu18.04-v10.2-ppc64le", "ubuntu18.04-v10.2-test-ppc64le"]
  <<: *scan_definition
  <<: *ubuntu18_04_10_2_ppc64le_only

ubuntu18.04-v10.2-deploy-ppc64le:
  <<: *deploy_definition
  <<: *ubuntu18_04_10_2_ppc64le_only
  needs:
    - job: ubuntu18.04-v10.2-test-ppc64le
      artifacts: true
    - job: ubuntu18.04-v10.2-scan-ppc64le
    - job: ubuntu18.04-v10.2-cudnn8-ppc64le
    - job: ubuntu18.04-v10.2-cudnn7-ppc64le

.ubuntu16_04_10_2_x86_64_variables: &ubuntu16_04_10_2_x86_64_variables
  ARCH: "x86_64"
  DIST_BASE_PATH: "dist/10.2"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda"
  MANIFEST: "manifests/cuda.yaml"
  OS: "ubuntu16.04"
  OS_NAME: "ubuntu"
  OS_VERSION: "16.04"
  CUDA_VERSION: "10.2"

.ubuntu16_04_10_2_x86_64_only: &ubuntu16_04_10_2_x86_64_only
  variables:
    <<: *ubuntu16_04_10_2_x86_64_variables
  only:
    variables:
      - $ubuntu16_04_10_2_x86_64 == "true"
      - $all == "true"

ubuntu16.04-v10.2-x86_64:
  <<: *cuda_base_definition
  <<: *ubuntu16_04_10_2_x86_64_only

ubuntu16.04-v10.2-cudnn8-x86_64:
  <<: *cudnn_definition
  <<: *ubuntu16_04_10_2_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubuntu16_04_10_2_x86_64_variables
    CUDNN_VERSION: "cudnn8"
  artifacts:
    reports:
      dotenv: cudnn8finaltags.env
  needs:
    - job: ubuntu16.04-v10.2-x86_64
      artifacts: true

ubuntu16.04-v10.2-cudnn7-x86_64:
  <<: *cudnn_definition
  <<: *ubuntu16_04_10_2_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubuntu16_04_10_2_x86_64_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: ubuntu16.04-v10.2-x86_64
      artifacts: true

ubuntu16.04-v10.2-test-x86_64:
  needs: ["ubuntu16.04-v10.2-x86_64"]
  <<: *test_definition
  <<: *ubuntu16_04_10_2_x86_64_only

ubuntu16.04-v10.2-scan-x86_64:
  needs: ["ubuntu16.04-v10.2-x86_64", "ubuntu16.04-v10.2-test-x86_64"]
  <<: *scan_definition
  <<: *ubuntu16_04_10_2_x86_64_only

ubuntu16.04-v10.2-deploy-x86_64:
  <<: *deploy_definition
  <<: *ubuntu16_04_10_2_x86_64_only
  needs:
    - job: ubuntu16.04-v10.2-test-x86_64
      artifacts: true
    - job: ubuntu16.04-v10.2-scan-x86_64
    - job: ubuntu16.04-v10.2-cudnn8-x86_64
    - job: ubuntu16.04-v10.2-cudnn7-x86_64

.centos8_10_2_x86_64_variables: &centos8_10_2_x86_64_variables
  ARCH: "x86_64"
  DIST_BASE_PATH: "dist/10.2"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda"
  MANIFEST: "manifests/cuda.yaml"
  OS: "centos8"
  OS_NAME: "centos"
  OS_VERSION: "8"
  CUDA_VERSION: "10.2"

.centos8_10_2_x86_64_only: &centos8_10_2_x86_64_only
  variables:
    <<: *centos8_10_2_x86_64_variables
  only:
    variables:
      - $centos8_10_2_x86_64 == "true"
      - $all == "true"

centos8-v10.2-x86_64:
  <<: *cuda_base_definition
  <<: *centos8_10_2_x86_64_only

centos8-v10.2-cudnn8-x86_64:
  <<: *cudnn_definition
  <<: *centos8_10_2_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *centos8_10_2_x86_64_variables
    CUDNN_VERSION: "cudnn8"
  artifacts:
    reports:
      dotenv: cudnn8finaltags.env
  needs:
    - job: centos8-v10.2-x86_64
      artifacts: true

centos8-v10.2-cudnn7-x86_64:
  <<: *cudnn_definition
  <<: *centos8_10_2_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *centos8_10_2_x86_64_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: centos8-v10.2-x86_64
      artifacts: true

centos8-v10.2-test-x86_64:
  needs: ["centos8-v10.2-x86_64"]
  <<: *test_definition
  <<: *centos8_10_2_x86_64_only

centos8-v10.2-scan-x86_64:
  needs: ["centos8-v10.2-x86_64", "centos8-v10.2-test-x86_64"]
  <<: *scan_definition
  <<: *centos8_10_2_x86_64_only

centos8-v10.2-deploy-x86_64:
  <<: *deploy_definition
  <<: *centos8_10_2_x86_64_only
  needs:
    - job: centos8-v10.2-test-x86_64
      artifacts: true
    - job: centos8-v10.2-scan-x86_64
    - job: centos8-v10.2-cudnn8-x86_64
    - job: centos8-v10.2-cudnn7-x86_64

.centos7_10_2_x86_64_variables: &centos7_10_2_x86_64_variables
  ARCH: "x86_64"
  DIST_BASE_PATH: "dist/10.2"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda"
  MANIFEST: "manifests/cuda.yaml"
  OS: "centos7"
  OS_NAME: "centos"
  OS_VERSION: "7"
  CUDA_VERSION: "10.2"

.centos7_10_2_x86_64_only: &centos7_10_2_x86_64_only
  variables:
    <<: *centos7_10_2_x86_64_variables
  only:
    variables:
      - $centos7_10_2_x86_64 == "true"
      - $all == "true"

centos7-v10.2-x86_64:
  <<: *cuda_base_definition
  <<: *centos7_10_2_x86_64_only

centos7-v10.2-cudnn8-x86_64:
  <<: *cudnn_definition
  <<: *centos7_10_2_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *centos7_10_2_x86_64_variables
    CUDNN_VERSION: "cudnn8"
  artifacts:
    reports:
      dotenv: cudnn8finaltags.env
  needs:
    - job: centos7-v10.2-x86_64
      artifacts: true

centos7-v10.2-cudnn7-x86_64:
  <<: *cudnn_definition
  <<: *centos7_10_2_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *centos7_10_2_x86_64_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: centos7-v10.2-x86_64
      artifacts: true

centos7-v10.2-test-x86_64:
  needs: ["centos7-v10.2-x86_64"]
  <<: *test_definition
  <<: *centos7_10_2_x86_64_only

centos7-v10.2-scan-x86_64:
  needs: ["centos7-v10.2-x86_64", "centos7-v10.2-test-x86_64"]
  <<: *scan_definition
  <<: *centos7_10_2_x86_64_only

centos7-v10.2-deploy-x86_64:
  <<: *deploy_definition
  <<: *centos7_10_2_x86_64_only
  needs:
    - job: centos7-v10.2-test-x86_64
      artifacts: true
    - job: centos7-v10.2-scan-x86_64
    - job: centos7-v10.2-cudnn8-x86_64
    - job: centos7-v10.2-cudnn7-x86_64

.centos7_10_2_ppc64le_variables: &centos7_10_2_ppc64le_variables
  ARCH: "ppc64le"
  DIST_BASE_PATH: "dist/10.2"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda/cuda-ppc64le"
  MANIFEST: "manifests/cuda.yaml"
  OS: "centos7"
  OS_NAME: "centos"
  OS_VERSION: "7"
  CUDA_VERSION: "10.2"

.centos7_10_2_ppc64le_only: &centos7_10_2_ppc64le_only
  variables:
    <<: *centos7_10_2_ppc64le_variables
  only:
    variables:
      - $centos7_10_2_ppc64le == "true"
      - $all == "true"

centos7-v10.2-ppc64le:
  <<: *cuda_base_definition
  <<: *centos7_10_2_ppc64le_only

centos7-v10.2-cudnn8-ppc64le:
  <<: *cudnn_definition
  <<: *centos7_10_2_ppc64le_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *centos7_10_2_ppc64le_variables
    CUDNN_VERSION: "cudnn8"
  artifacts:
    reports:
      dotenv: cudnn8finaltags.env
  needs:
    - job: centos7-v10.2-ppc64le
      artifacts: true

centos7-v10.2-cudnn7-ppc64le:
  <<: *cudnn_definition
  <<: *centos7_10_2_ppc64le_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *centos7_10_2_ppc64le_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: centos7-v10.2-ppc64le
      artifacts: true

centos7-v10.2-test-ppc64le:
  needs: ["centos7-v10.2-ppc64le"]
  <<: *test_definition
  <<: *centos7_10_2_ppc64le_only

centos7-v10.2-scan-ppc64le:
  needs: ["centos7-v10.2-ppc64le", "centos7-v10.2-test-ppc64le"]
  <<: *scan_definition
  <<: *centos7_10_2_ppc64le_only

centos7-v10.2-deploy-ppc64le:
  <<: *deploy_definition
  <<: *centos7_10_2_ppc64le_only
  needs:
    - job: centos7-v10.2-test-ppc64le
      artifacts: true
    - job: centos7-v10.2-scan-ppc64le
    - job: centos7-v10.2-cudnn8-ppc64le
    - job: centos7-v10.2-cudnn7-ppc64le

.centos6_10_2_x86_64_variables: &centos6_10_2_x86_64_variables
  ARCH: "x86_64"
  DIST_BASE_PATH: "dist/10.2"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda"
  MANIFEST: "manifests/cuda.yaml"
  OS: "centos6"
  OS_NAME: "centos"
  OS_VERSION: "6"
  CUDA_VERSION: "10.2"

.centos6_10_2_x86_64_only: &centos6_10_2_x86_64_only
  variables:
    <<: *centos6_10_2_x86_64_variables
  only:
    variables:
      - $centos6_10_2_x86_64 == "true"
      - $all == "true"

centos6-v10.2-x86_64:
  <<: *cuda_base_definition
  <<: *centos6_10_2_x86_64_only

centos6-v10.2-cudnn8-x86_64:
  <<: *cudnn_definition
  <<: *centos6_10_2_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *centos6_10_2_x86_64_variables
    CUDNN_VERSION: "cudnn8"
  artifacts:
    reports:
      dotenv: cudnn8finaltags.env
  needs:
    - job: centos6-v10.2-x86_64
      artifacts: true

centos6-v10.2-cudnn7-x86_64:
  <<: *cudnn_definition
  <<: *centos6_10_2_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *centos6_10_2_x86_64_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: centos6-v10.2-x86_64
      artifacts: true

centos6-v10.2-test-x86_64:
  needs: ["centos6-v10.2-x86_64"]
  <<: *test_definition
  <<: *centos6_10_2_x86_64_only

centos6-v10.2-scan-x86_64:
  needs: ["centos6-v10.2-x86_64", "centos6-v10.2-test-x86_64"]
  <<: *scan_definition
  <<: *centos6_10_2_x86_64_only

centos6-v10.2-deploy-x86_64:
  <<: *deploy_definition
  <<: *centos6_10_2_x86_64_only
  needs:
    - job: centos6-v10.2-test-x86_64
      artifacts: true
    - job: centos6-v10.2-scan-x86_64
    - job: centos6-v10.2-cudnn8-x86_64
    - job: centos6-v10.2-cudnn7-x86_64

.ubi8_10_2_x86_64_variables: &ubi8_10_2_x86_64_variables
  ARCH: "x86_64"
  DIST_BASE_PATH: "dist/10.2"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda"
  MANIFEST: "manifests/cuda.yaml"
  OS: "ubi8"
  OS_NAME: "ubi"
  OS_VERSION: "8"
  CUDA_VERSION: "10.2"

.ubi8_10_2_x86_64_only: &ubi8_10_2_x86_64_only
  variables:
    <<: *ubi8_10_2_x86_64_variables
  only:
    variables:
      - $ubi8_10_2_x86_64 == "true"
      - $all == "true"

ubi8-v10.2-x86_64:
  <<: *cuda_base_definition
  <<: *ubi8_10_2_x86_64_only

ubi8-v10.2-cudnn8-x86_64:
  <<: *cudnn_definition
  <<: *ubi8_10_2_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubi8_10_2_x86_64_variables
    CUDNN_VERSION: "cudnn8"
  artifacts:
    reports:
      dotenv: cudnn8finaltags.env
  needs:
    - job: ubi8-v10.2-x86_64
      artifacts: true

ubi8-v10.2-cudnn7-x86_64:
  <<: *cudnn_definition
  <<: *ubi8_10_2_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubi8_10_2_x86_64_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: ubi8-v10.2-x86_64
      artifacts: true

ubi8-v10.2-test-x86_64:
  needs: ["ubi8-v10.2-x86_64"]
  <<: *test_definition
  <<: *ubi8_10_2_x86_64_only

ubi8-v10.2-scan-x86_64:
  needs: ["ubi8-v10.2-x86_64", "ubi8-v10.2-test-x86_64"]
  <<: *scan_definition
  <<: *ubi8_10_2_x86_64_only

ubi8-v10.2-deploy-x86_64:
  <<: *deploy_definition
  <<: *ubi8_10_2_x86_64_only
  needs:
    - job: ubi8-v10.2-test-x86_64
      artifacts: true
    - job: ubi8-v10.2-scan-x86_64
    - job: ubi8-v10.2-cudnn8-x86_64
    - job: ubi8-v10.2-cudnn7-x86_64

.ubi7_10_2_x86_64_variables: &ubi7_10_2_x86_64_variables
  ARCH: "x86_64"
  DIST_BASE_PATH: "dist/10.2"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda"
  MANIFEST: "manifests/cuda.yaml"
  OS: "ubi7"
  OS_NAME: "ubi"
  OS_VERSION: "7"
  CUDA_VERSION: "10.2"

.ubi7_10_2_x86_64_only: &ubi7_10_2_x86_64_only
  variables:
    <<: *ubi7_10_2_x86_64_variables
  only:
    variables:
      - $ubi7_10_2_x86_64 == "true"
      - $all == "true"

ubi7-v10.2-x86_64:
  <<: *cuda_base_definition
  <<: *ubi7_10_2_x86_64_only

ubi7-v10.2-cudnn8-x86_64:
  <<: *cudnn_definition
  <<: *ubi7_10_2_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubi7_10_2_x86_64_variables
    CUDNN_VERSION: "cudnn8"
  artifacts:
    reports:
      dotenv: cudnn8finaltags.env
  needs:
    - job: ubi7-v10.2-x86_64
      artifacts: true

ubi7-v10.2-cudnn7-x86_64:
  <<: *cudnn_definition
  <<: *ubi7_10_2_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubi7_10_2_x86_64_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: ubi7-v10.2-x86_64
      artifacts: true

ubi7-v10.2-test-x86_64:
  needs: ["ubi7-v10.2-x86_64"]
  <<: *test_definition
  <<: *ubi7_10_2_x86_64_only

ubi7-v10.2-scan-x86_64:
  needs: ["ubi7-v10.2-x86_64", "ubi7-v10.2-test-x86_64"]
  <<: *scan_definition
  <<: *ubi7_10_2_x86_64_only

ubi7-v10.2-deploy-x86_64:
  <<: *deploy_definition
  <<: *ubi7_10_2_x86_64_only
  needs:
    - job: ubi7-v10.2-test-x86_64
      artifacts: true
    - job: ubi7-v10.2-scan-x86_64
    - job: ubi7-v10.2-cudnn8-x86_64
    - job: ubi7-v10.2-cudnn7-x86_64

.ubi7_10_2_ppc64le_variables: &ubi7_10_2_ppc64le_variables
  ARCH: "ppc64le"
  DIST_BASE_PATH: "dist/10.2"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda/cuda-ppc64le"
  MANIFEST: "manifests/cuda.yaml"
  OS: "ubi7"
  OS_NAME: "ubi"
  OS_VERSION: "7"
  CUDA_VERSION: "10.2"

.ubi7_10_2_ppc64le_only: &ubi7_10_2_ppc64le_only
  variables:
    <<: *ubi7_10_2_ppc64le_variables
  only:
    variables:
      - $ubi7_10_2_ppc64le == "true"
      - $all == "true"

ubi7-v10.2-ppc64le:
  <<: *cuda_base_definition
  <<: *ubi7_10_2_ppc64le_only

ubi7-v10.2-cudnn8-ppc64le:
  <<: *cudnn_definition
  <<: *ubi7_10_2_ppc64le_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubi7_10_2_ppc64le_variables
    CUDNN_VERSION: "cudnn8"
  artifacts:
    reports:
      dotenv: cudnn8finaltags.env
  needs:
    - job: ubi7-v10.2-ppc64le
      artifacts: true

ubi7-v10.2-cudnn7-ppc64le:
  <<: *cudnn_definition
  <<: *ubi7_10_2_ppc64le_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubi7_10_2_ppc64le_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: ubi7-v10.2-ppc64le
      artifacts: true

ubi7-v10.2-test-ppc64le:
  needs: ["ubi7-v10.2-ppc64le"]
  <<: *test_definition
  <<: *ubi7_10_2_ppc64le_only

ubi7-v10.2-scan-ppc64le:
  needs: ["ubi7-v10.2-ppc64le", "ubi7-v10.2-test-ppc64le"]
  <<: *scan_definition
  <<: *ubi7_10_2_ppc64le_only

ubi7-v10.2-deploy-ppc64le:
  <<: *deploy_definition
  <<: *ubi7_10_2_ppc64le_only
  needs:
    - job: ubi7-v10.2-test-ppc64le
      artifacts: true
    - job: ubi7-v10.2-scan-ppc64le
    - job: ubi7-v10.2-cudnn8-ppc64le
    - job: ubi7-v10.2-cudnn7-ppc64le

.ubuntu18_04_10_1_x86_64_variables: &ubuntu18_04_10_1_x86_64_variables
  ARCH: "x86_64"
  DIST_BASE_PATH: "dist/10.1"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda"
  MANIFEST: "manifests/cuda.yaml"
  NO_OS_SUFFIX: "true"
  OS: "ubuntu18.04"
  OS_NAME: "ubuntu"
  OS_VERSION: "18.04"
  CUDA_VERSION: "10.1"

.ubuntu18_04_10_1_x86_64_only: &ubuntu18_04_10_1_x86_64_only
  variables:
    <<: *ubuntu18_04_10_1_x86_64_variables
  only:
    variables:
      - $ubuntu18_04_10_1_x86_64 == "true"
      - $all == "true"

ubuntu18.04-v10.1-x86_64:
  <<: *cuda_base_definition
  <<: *ubuntu18_04_10_1_x86_64_only

ubuntu18.04-v10.1-cudnn8-x86_64:
  <<: *cudnn_definition
  <<: *ubuntu18_04_10_1_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubuntu18_04_10_1_x86_64_variables
    CUDNN_VERSION: "cudnn8"
  artifacts:
    reports:
      dotenv: cudnn8finaltags.env
  needs:
    - job: ubuntu18.04-v10.1-x86_64
      artifacts: true

ubuntu18.04-v10.1-cudnn7-x86_64:
  <<: *cudnn_definition
  <<: *ubuntu18_04_10_1_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubuntu18_04_10_1_x86_64_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: ubuntu18.04-v10.1-x86_64
      artifacts: true

ubuntu18.04-v10.1-test-x86_64:
  needs: ["ubuntu18.04-v10.1-x86_64"]
  <<: *test_definition
  <<: *ubuntu18_04_10_1_x86_64_only

ubuntu18.04-v10.1-scan-x86_64:
  needs: ["ubuntu18.04-v10.1-x86_64", "ubuntu18.04-v10.1-test-x86_64"]
  <<: *scan_definition
  <<: *ubuntu18_04_10_1_x86_64_only

ubuntu18.04-v10.1-deploy-x86_64:
  <<: *deploy_definition
  <<: *ubuntu18_04_10_1_x86_64_only
  needs:
    - job: ubuntu18.04-v10.1-test-x86_64
      artifacts: true
    - job: ubuntu18.04-v10.1-scan-x86_64
    - job: ubuntu18.04-v10.1-cudnn8-x86_64
    - job: ubuntu18.04-v10.1-cudnn7-x86_64

.ubuntu18_04_10_1_ppc64le_variables: &ubuntu18_04_10_1_ppc64le_variables
  ARCH: "ppc64le"
  DIST_BASE_PATH: "dist/10.1"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda/cuda-ppc64le"
  MANIFEST: "manifests/cuda.yaml"
  NO_OS_SUFFIX: "true"
  OS: "ubuntu18.04"
  OS_NAME: "ubuntu"
  OS_VERSION: "18.04"
  CUDA_VERSION: "10.1"

.ubuntu18_04_10_1_ppc64le_only: &ubuntu18_04_10_1_ppc64le_only
  variables:
    <<: *ubuntu18_04_10_1_ppc64le_variables
  only:
    variables:
      - $ubuntu18_04_10_1_ppc64le == "true"
      - $all == "true"

ubuntu18.04-v10.1-ppc64le:
  <<: *cuda_base_definition
  <<: *ubuntu18_04_10_1_ppc64le_only

ubuntu18.04-v10.1-cudnn8-ppc64le:
  <<: *cudnn_definition
  <<: *ubuntu18_04_10_1_ppc64le_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubuntu18_04_10_1_ppc64le_variables
    CUDNN_VERSION: "cudnn8"
  artifacts:
    reports:
      dotenv: cudnn8finaltags.env
  needs:
    - job: ubuntu18.04-v10.1-ppc64le
      artifacts: true

ubuntu18.04-v10.1-cudnn7-ppc64le:
  <<: *cudnn_definition
  <<: *ubuntu18_04_10_1_ppc64le_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubuntu18_04_10_1_ppc64le_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: ubuntu18.04-v10.1-ppc64le
      artifacts: true

ubuntu18.04-v10.1-test-ppc64le:
  needs: ["ubuntu18.04-v10.1-ppc64le"]
  <<: *test_definition
  <<: *ubuntu18_04_10_1_ppc64le_only

ubuntu18.04-v10.1-scan-ppc64le:
  needs: ["ubuntu18.04-v10.1-ppc64le", "ubuntu18.04-v10.1-test-ppc64le"]
  <<: *scan_definition
  <<: *ubuntu18_04_10_1_ppc64le_only

ubuntu18.04-v10.1-deploy-ppc64le:
  <<: *deploy_definition
  <<: *ubuntu18_04_10_1_ppc64le_only
  needs:
    - job: ubuntu18.04-v10.1-test-ppc64le
      artifacts: true
    - job: ubuntu18.04-v10.1-scan-ppc64le
    - job: ubuntu18.04-v10.1-cudnn8-ppc64le
    - job: ubuntu18.04-v10.1-cudnn7-ppc64le

.ubuntu16_04_10_1_x86_64_variables: &ubuntu16_04_10_1_x86_64_variables
  ARCH: "x86_64"
  DIST_BASE_PATH: "dist/10.1"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda"
  MANIFEST: "manifests/cuda.yaml"
  OS: "ubuntu16.04"
  OS_NAME: "ubuntu"
  OS_VERSION: "16.04"
  CUDA_VERSION: "10.1"

.ubuntu16_04_10_1_x86_64_only: &ubuntu16_04_10_1_x86_64_only
  variables:
    <<: *ubuntu16_04_10_1_x86_64_variables
  only:
    variables:
      - $ubuntu16_04_10_1_x86_64 == "true"
      - $all == "true"

ubuntu16.04-v10.1-x86_64:
  <<: *cuda_base_definition
  <<: *ubuntu16_04_10_1_x86_64_only

ubuntu16.04-v10.1-cudnn8-x86_64:
  <<: *cudnn_definition
  <<: *ubuntu16_04_10_1_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubuntu16_04_10_1_x86_64_variables
    CUDNN_VERSION: "cudnn8"
  artifacts:
    reports:
      dotenv: cudnn8finaltags.env
  needs:
    - job: ubuntu16.04-v10.1-x86_64
      artifacts: true

ubuntu16.04-v10.1-cudnn7-x86_64:
  <<: *cudnn_definition
  <<: *ubuntu16_04_10_1_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubuntu16_04_10_1_x86_64_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: ubuntu16.04-v10.1-x86_64
      artifacts: true

ubuntu16.04-v10.1-test-x86_64:
  needs: ["ubuntu16.04-v10.1-x86_64"]
  <<: *test_definition
  <<: *ubuntu16_04_10_1_x86_64_only

ubuntu16.04-v10.1-scan-x86_64:
  needs: ["ubuntu16.04-v10.1-x86_64", "ubuntu16.04-v10.1-test-x86_64"]
  <<: *scan_definition
  <<: *ubuntu16_04_10_1_x86_64_only

ubuntu16.04-v10.1-deploy-x86_64:
  <<: *deploy_definition
  <<: *ubuntu16_04_10_1_x86_64_only
  needs:
    - job: ubuntu16.04-v10.1-test-x86_64
      artifacts: true
    - job: ubuntu16.04-v10.1-scan-x86_64
    - job: ubuntu16.04-v10.1-cudnn8-x86_64
    - job: ubuntu16.04-v10.1-cudnn7-x86_64

.centos8_10_1_x86_64_variables: &centos8_10_1_x86_64_variables
  ARCH: "x86_64"
  DIST_BASE_PATH: "dist/10.1"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda"
  MANIFEST: "manifests/cuda.yaml"
  OS: "centos8"
  OS_NAME: "centos"
  OS_VERSION: "8"
  CUDA_VERSION: "10.1"

.centos8_10_1_x86_64_only: &centos8_10_1_x86_64_only
  variables:
    <<: *centos8_10_1_x86_64_variables
  only:
    variables:
      - $centos8_10_1_x86_64 == "true"
      - $all == "true"

centos8-v10.1-x86_64:
  <<: *cuda_base_definition
  <<: *centos8_10_1_x86_64_only

centos8-v10.1-cudnn8-x86_64:
  <<: *cudnn_definition
  <<: *centos8_10_1_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *centos8_10_1_x86_64_variables
    CUDNN_VERSION: "cudnn8"
  artifacts:
    reports:
      dotenv: cudnn8finaltags.env
  needs:
    - job: centos8-v10.1-x86_64
      artifacts: true

centos8-v10.1-cudnn7-x86_64:
  <<: *cudnn_definition
  <<: *centos8_10_1_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *centos8_10_1_x86_64_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: centos8-v10.1-x86_64
      artifacts: true

centos8-v10.1-test-x86_64:
  needs: ["centos8-v10.1-x86_64"]
  <<: *test_definition
  <<: *centos8_10_1_x86_64_only

centos8-v10.1-scan-x86_64:
  needs: ["centos8-v10.1-x86_64", "centos8-v10.1-test-x86_64"]
  <<: *scan_definition
  <<: *centos8_10_1_x86_64_only

centos8-v10.1-deploy-x86_64:
  <<: *deploy_definition
  <<: *centos8_10_1_x86_64_only
  needs:
    - job: centos8-v10.1-test-x86_64
      artifacts: true
    - job: centos8-v10.1-scan-x86_64
    - job: centos8-v10.1-cudnn8-x86_64
    - job: centos8-v10.1-cudnn7-x86_64

.centos7_10_1_x86_64_variables: &centos7_10_1_x86_64_variables
  ARCH: "x86_64"
  DIST_BASE_PATH: "dist/10.1"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda"
  MANIFEST: "manifests/cuda.yaml"
  OS: "centos7"
  OS_NAME: "centos"
  OS_VERSION: "7"
  CUDA_VERSION: "10.1"

.centos7_10_1_x86_64_only: &centos7_10_1_x86_64_only
  variables:
    <<: *centos7_10_1_x86_64_variables
  only:
    variables:
      - $centos7_10_1_x86_64 == "true"
      - $all == "true"

centos7-v10.1-x86_64:
  <<: *cuda_base_definition
  <<: *centos7_10_1_x86_64_only

centos7-v10.1-cudnn8-x86_64:
  <<: *cudnn_definition
  <<: *centos7_10_1_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *centos7_10_1_x86_64_variables
    CUDNN_VERSION: "cudnn8"
  artifacts:
    reports:
      dotenv: cudnn8finaltags.env
  needs:
    - job: centos7-v10.1-x86_64
      artifacts: true

centos7-v10.1-cudnn7-x86_64:
  <<: *cudnn_definition
  <<: *centos7_10_1_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *centos7_10_1_x86_64_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: centos7-v10.1-x86_64
      artifacts: true

centos7-v10.1-test-x86_64:
  needs: ["centos7-v10.1-x86_64"]
  <<: *test_definition
  <<: *centos7_10_1_x86_64_only

centos7-v10.1-scan-x86_64:
  needs: ["centos7-v10.1-x86_64", "centos7-v10.1-test-x86_64"]
  <<: *scan_definition
  <<: *centos7_10_1_x86_64_only

centos7-v10.1-deploy-x86_64:
  <<: *deploy_definition
  <<: *centos7_10_1_x86_64_only
  needs:
    - job: centos7-v10.1-test-x86_64
      artifacts: true
    - job: centos7-v10.1-scan-x86_64
    - job: centos7-v10.1-cudnn8-x86_64
    - job: centos7-v10.1-cudnn7-x86_64

.centos7_10_1_ppc64le_variables: &centos7_10_1_ppc64le_variables
  ARCH: "ppc64le"
  DIST_BASE_PATH: "dist/10.1"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda/cuda-ppc64le"
  MANIFEST: "manifests/cuda.yaml"
  OS: "centos7"
  OS_NAME: "centos"
  OS_VERSION: "7"
  CUDA_VERSION: "10.1"

.centos7_10_1_ppc64le_only: &centos7_10_1_ppc64le_only
  variables:
    <<: *centos7_10_1_ppc64le_variables
  only:
    variables:
      - $centos7_10_1_ppc64le == "true"
      - $all == "true"

centos7-v10.1-ppc64le:
  <<: *cuda_base_definition
  <<: *centos7_10_1_ppc64le_only

centos7-v10.1-cudnn8-ppc64le:
  <<: *cudnn_definition
  <<: *centos7_10_1_ppc64le_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *centos7_10_1_ppc64le_variables
    CUDNN_VERSION: "cudnn8"
  artifacts:
    reports:
      dotenv: cudnn8finaltags.env
  needs:
    - job: centos7-v10.1-ppc64le
      artifacts: true

centos7-v10.1-cudnn7-ppc64le:
  <<: *cudnn_definition
  <<: *centos7_10_1_ppc64le_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *centos7_10_1_ppc64le_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: centos7-v10.1-ppc64le
      artifacts: true

centos7-v10.1-test-ppc64le:
  needs: ["centos7-v10.1-ppc64le"]
  <<: *test_definition
  <<: *centos7_10_1_ppc64le_only

centos7-v10.1-scan-ppc64le:
  needs: ["centos7-v10.1-ppc64le", "centos7-v10.1-test-ppc64le"]
  <<: *scan_definition
  <<: *centos7_10_1_ppc64le_only

centos7-v10.1-deploy-ppc64le:
  <<: *deploy_definition
  <<: *centos7_10_1_ppc64le_only
  needs:
    - job: centos7-v10.1-test-ppc64le
      artifacts: true
    - job: centos7-v10.1-scan-ppc64le
    - job: centos7-v10.1-cudnn8-ppc64le
    - job: centos7-v10.1-cudnn7-ppc64le

.centos6_10_1_x86_64_variables: &centos6_10_1_x86_64_variables
  ARCH: "x86_64"
  DIST_BASE_PATH: "dist/10.1"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda"
  MANIFEST: "manifests/cuda.yaml"
  OS: "centos6"
  OS_NAME: "centos"
  OS_VERSION: "6"
  CUDA_VERSION: "10.1"

.centos6_10_1_x86_64_only: &centos6_10_1_x86_64_only
  variables:
    <<: *centos6_10_1_x86_64_variables
  only:
    variables:
      - $centos6_10_1_x86_64 == "true"
      - $all == "true"

centos6-v10.1-x86_64:
  <<: *cuda_base_definition
  <<: *centos6_10_1_x86_64_only

centos6-v10.1-cudnn8-x86_64:
  <<: *cudnn_definition
  <<: *centos6_10_1_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *centos6_10_1_x86_64_variables
    CUDNN_VERSION: "cudnn8"
  artifacts:
    reports:
      dotenv: cudnn8finaltags.env
  needs:
    - job: centos6-v10.1-x86_64
      artifacts: true

centos6-v10.1-cudnn7-x86_64:
  <<: *cudnn_definition
  <<: *centos6_10_1_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *centos6_10_1_x86_64_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: centos6-v10.1-x86_64
      artifacts: true

centos6-v10.1-test-x86_64:
  needs: ["centos6-v10.1-x86_64"]
  <<: *test_definition
  <<: *centos6_10_1_x86_64_only

centos6-v10.1-scan-x86_64:
  needs: ["centos6-v10.1-x86_64", "centos6-v10.1-test-x86_64"]
  <<: *scan_definition
  <<: *centos6_10_1_x86_64_only

centos6-v10.1-deploy-x86_64:
  <<: *deploy_definition
  <<: *centos6_10_1_x86_64_only
  needs:
    - job: centos6-v10.1-test-x86_64
      artifacts: true
    - job: centos6-v10.1-scan-x86_64
    - job: centos6-v10.1-cudnn8-x86_64
    - job: centos6-v10.1-cudnn7-x86_64

.ubi8_10_1_x86_64_variables: &ubi8_10_1_x86_64_variables
  ARCH: "x86_64"
  DIST_BASE_PATH: "dist/10.1"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda"
  MANIFEST: "manifests/cuda.yaml"
  OS: "ubi8"
  OS_NAME: "ubi"
  OS_VERSION: "8"
  CUDA_VERSION: "10.1"

.ubi8_10_1_x86_64_only: &ubi8_10_1_x86_64_only
  variables:
    <<: *ubi8_10_1_x86_64_variables
  only:
    variables:
      - $ubi8_10_1_x86_64 == "true"
      - $all == "true"

ubi8-v10.1-x86_64:
  <<: *cuda_base_definition
  <<: *ubi8_10_1_x86_64_only

ubi8-v10.1-cudnn8-x86_64:
  <<: *cudnn_definition
  <<: *ubi8_10_1_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubi8_10_1_x86_64_variables
    CUDNN_VERSION: "cudnn8"
  artifacts:
    reports:
      dotenv: cudnn8finaltags.env
  needs:
    - job: ubi8-v10.1-x86_64
      artifacts: true

ubi8-v10.1-cudnn7-x86_64:
  <<: *cudnn_definition
  <<: *ubi8_10_1_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubi8_10_1_x86_64_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: ubi8-v10.1-x86_64
      artifacts: true

ubi8-v10.1-test-x86_64:
  needs: ["ubi8-v10.1-x86_64"]
  <<: *test_definition
  <<: *ubi8_10_1_x86_64_only

ubi8-v10.1-scan-x86_64:
  needs: ["ubi8-v10.1-x86_64", "ubi8-v10.1-test-x86_64"]
  <<: *scan_definition
  <<: *ubi8_10_1_x86_64_only

ubi8-v10.1-deploy-x86_64:
  <<: *deploy_definition
  <<: *ubi8_10_1_x86_64_only
  needs:
    - job: ubi8-v10.1-test-x86_64
      artifacts: true
    - job: ubi8-v10.1-scan-x86_64
    - job: ubi8-v10.1-cudnn8-x86_64
    - job: ubi8-v10.1-cudnn7-x86_64

.ubi7_10_1_x86_64_variables: &ubi7_10_1_x86_64_variables
  ARCH: "x86_64"
  DIST_BASE_PATH: "dist/10.1"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda"
  MANIFEST: "manifests/cuda.yaml"
  OS: "ubi7"
  OS_NAME: "ubi"
  OS_VERSION: "7"
  CUDA_VERSION: "10.1"

.ubi7_10_1_x86_64_only: &ubi7_10_1_x86_64_only
  variables:
    <<: *ubi7_10_1_x86_64_variables
  only:
    variables:
      - $ubi7_10_1_x86_64 == "true"
      - $all == "true"

ubi7-v10.1-x86_64:
  <<: *cuda_base_definition
  <<: *ubi7_10_1_x86_64_only

ubi7-v10.1-cudnn8-x86_64:
  <<: *cudnn_definition
  <<: *ubi7_10_1_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubi7_10_1_x86_64_variables
    CUDNN_VERSION: "cudnn8"
  artifacts:
    reports:
      dotenv: cudnn8finaltags.env
  needs:
    - job: ubi7-v10.1-x86_64
      artifacts: true

ubi7-v10.1-cudnn7-x86_64:
  <<: *cudnn_definition
  <<: *ubi7_10_1_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubi7_10_1_x86_64_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: ubi7-v10.1-x86_64
      artifacts: true

ubi7-v10.1-test-x86_64:
  needs: ["ubi7-v10.1-x86_64"]
  <<: *test_definition
  <<: *ubi7_10_1_x86_64_only

ubi7-v10.1-scan-x86_64:
  needs: ["ubi7-v10.1-x86_64", "ubi7-v10.1-test-x86_64"]
  <<: *scan_definition
  <<: *ubi7_10_1_x86_64_only

ubi7-v10.1-deploy-x86_64:
  <<: *deploy_definition
  <<: *ubi7_10_1_x86_64_only
  needs:
    - job: ubi7-v10.1-test-x86_64
      artifacts: true
    - job: ubi7-v10.1-scan-x86_64
    - job: ubi7-v10.1-cudnn8-x86_64
    - job: ubi7-v10.1-cudnn7-x86_64

.ubi7_10_1_ppc64le_variables: &ubi7_10_1_ppc64le_variables
  ARCH: "ppc64le"
  DIST_BASE_PATH: "dist/10.1"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda/cuda-ppc64le"
  MANIFEST: "manifests/cuda.yaml"
  OS: "ubi7"
  OS_NAME: "ubi"
  OS_VERSION: "7"
  CUDA_VERSION: "10.1"

.ubi7_10_1_ppc64le_only: &ubi7_10_1_ppc64le_only
  variables:
    <<: *ubi7_10_1_ppc64le_variables
  only:
    variables:
      - $ubi7_10_1_ppc64le == "true"
      - $all == "true"

ubi7-v10.1-ppc64le:
  <<: *cuda_base_definition
  <<: *ubi7_10_1_ppc64le_only

ubi7-v10.1-cudnn8-ppc64le:
  <<: *cudnn_definition
  <<: *ubi7_10_1_ppc64le_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubi7_10_1_ppc64le_variables
    CUDNN_VERSION: "cudnn8"
  artifacts:
    reports:
      dotenv: cudnn8finaltags.env
  needs:
    - job: ubi7-v10.1-ppc64le
      artifacts: true

ubi7-v10.1-cudnn7-ppc64le:
  <<: *cudnn_definition
  <<: *ubi7_10_1_ppc64le_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubi7_10_1_ppc64le_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: ubi7-v10.1-ppc64le
      artifacts: true

ubi7-v10.1-test-ppc64le:
  needs: ["ubi7-v10.1-ppc64le"]
  <<: *test_definition
  <<: *ubi7_10_1_ppc64le_only

ubi7-v10.1-scan-ppc64le:
  needs: ["ubi7-v10.1-ppc64le", "ubi7-v10.1-test-ppc64le"]
  <<: *scan_definition
  <<: *ubi7_10_1_ppc64le_only

ubi7-v10.1-deploy-ppc64le:
  <<: *deploy_definition
  <<: *ubi7_10_1_ppc64le_only
  needs:
    - job: ubi7-v10.1-test-ppc64le
      artifacts: true
    - job: ubi7-v10.1-scan-ppc64le
    - job: ubi7-v10.1-cudnn8-ppc64le
    - job: ubi7-v10.1-cudnn7-ppc64le

.ubuntu18_04_10_0_x86_64_variables: &ubuntu18_04_10_0_x86_64_variables
  ARCH: "x86_64"
  DIST_BASE_PATH: "dist/10.0"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda"
  MANIFEST: "manifests/cuda.yaml"
  NO_OS_SUFFIX: "true"
  OS: "ubuntu18.04"
  OS_NAME: "ubuntu"
  OS_VERSION: "18.04"
  CUDA_VERSION: "10.0"

.ubuntu18_04_10_0_x86_64_only: &ubuntu18_04_10_0_x86_64_only
  variables:
    <<: *ubuntu18_04_10_0_x86_64_variables
  only:
    variables:
      - $ubuntu18_04_10_0_x86_64 == "true"
      - $all == "true"

ubuntu18.04-v10.0-x86_64:
  <<: *cuda_base_definition
  <<: *ubuntu18_04_10_0_x86_64_only

ubuntu18.04-v10.0-cudnn7-x86_64:
  <<: *cudnn_definition
  <<: *ubuntu18_04_10_0_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubuntu18_04_10_0_x86_64_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: ubuntu18.04-v10.0-x86_64
      artifacts: true

ubuntu18.04-v10.0-test-x86_64:
  needs: ["ubuntu18.04-v10.0-x86_64"]
  <<: *test_definition
  <<: *ubuntu18_04_10_0_x86_64_only

ubuntu18.04-v10.0-scan-x86_64:
  needs: ["ubuntu18.04-v10.0-x86_64", "ubuntu18.04-v10.0-test-x86_64"]
  <<: *scan_definition
  <<: *ubuntu18_04_10_0_x86_64_only

ubuntu18.04-v10.0-deploy-x86_64:
  <<: *deploy_definition
  <<: *ubuntu18_04_10_0_x86_64_only
  needs:
    - job: ubuntu18.04-v10.0-test-x86_64
      artifacts: true
    - job: ubuntu18.04-v10.0-scan-x86_64
    - job: ubuntu18.04-v10.0-cudnn7-x86_64

.ubuntu18_04_10_0_ppc64le_variables: &ubuntu18_04_10_0_ppc64le_variables
  ARCH: "ppc64le"
  DIST_BASE_PATH: "dist/10.0"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda/cuda-ppc64le"
  MANIFEST: "manifests/cuda.yaml"
  NO_OS_SUFFIX: "true"
  OS: "ubuntu18.04"
  OS_NAME: "ubuntu"
  OS_VERSION: "18.04"
  CUDA_VERSION: "10.0"

.ubuntu18_04_10_0_ppc64le_only: &ubuntu18_04_10_0_ppc64le_only
  variables:
    <<: *ubuntu18_04_10_0_ppc64le_variables
  only:
    variables:
      - $ubuntu18_04_10_0_ppc64le == "true"
      - $all == "true"

ubuntu18.04-v10.0-ppc64le:
  <<: *cuda_base_definition
  <<: *ubuntu18_04_10_0_ppc64le_only

ubuntu18.04-v10.0-cudnn7-ppc64le:
  <<: *cudnn_definition
  <<: *ubuntu18_04_10_0_ppc64le_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubuntu18_04_10_0_ppc64le_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: ubuntu18.04-v10.0-ppc64le
      artifacts: true

ubuntu18.04-v10.0-test-ppc64le:
  needs: ["ubuntu18.04-v10.0-ppc64le"]
  <<: *test_definition
  <<: *ubuntu18_04_10_0_ppc64le_only

ubuntu18.04-v10.0-scan-ppc64le:
  needs: ["ubuntu18.04-v10.0-ppc64le", "ubuntu18.04-v10.0-test-ppc64le"]
  <<: *scan_definition
  <<: *ubuntu18_04_10_0_ppc64le_only

ubuntu18.04-v10.0-deploy-ppc64le:
  <<: *deploy_definition
  <<: *ubuntu18_04_10_0_ppc64le_only
  needs:
    - job: ubuntu18.04-v10.0-test-ppc64le
      artifacts: true
    - job: ubuntu18.04-v10.0-scan-ppc64le
    - job: ubuntu18.04-v10.0-cudnn7-ppc64le

.ubuntu16_04_10_0_x86_64_variables: &ubuntu16_04_10_0_x86_64_variables
  ARCH: "x86_64"
  DIST_BASE_PATH: "dist/10.0"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda"
  MANIFEST: "manifests/cuda.yaml"
  OS: "ubuntu16.04"
  OS_NAME: "ubuntu"
  OS_VERSION: "16.04"
  CUDA_VERSION: "10.0"

.ubuntu16_04_10_0_x86_64_only: &ubuntu16_04_10_0_x86_64_only
  variables:
    <<: *ubuntu16_04_10_0_x86_64_variables
  only:
    variables:
      - $ubuntu16_04_10_0_x86_64 == "true"
      - $all == "true"

ubuntu16.04-v10.0-x86_64:
  <<: *cuda_base_definition
  <<: *ubuntu16_04_10_0_x86_64_only

ubuntu16.04-v10.0-cudnn7-x86_64:
  <<: *cudnn_definition
  <<: *ubuntu16_04_10_0_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubuntu16_04_10_0_x86_64_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: ubuntu16.04-v10.0-x86_64
      artifacts: true

ubuntu16.04-v10.0-test-x86_64:
  needs: ["ubuntu16.04-v10.0-x86_64"]
  <<: *test_definition
  <<: *ubuntu16_04_10_0_x86_64_only

ubuntu16.04-v10.0-scan-x86_64:
  needs: ["ubuntu16.04-v10.0-x86_64", "ubuntu16.04-v10.0-test-x86_64"]
  <<: *scan_definition
  <<: *ubuntu16_04_10_0_x86_64_only

ubuntu16.04-v10.0-deploy-x86_64:
  <<: *deploy_definition
  <<: *ubuntu16_04_10_0_x86_64_only
  needs:
    - job: ubuntu16.04-v10.0-test-x86_64
      artifacts: true
    - job: ubuntu16.04-v10.0-scan-x86_64
    - job: ubuntu16.04-v10.0-cudnn7-x86_64

.centos7_10_0_x86_64_variables: &centos7_10_0_x86_64_variables
  ARCH: "x86_64"
  DIST_BASE_PATH: "dist/10.0"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda"
  MANIFEST: "manifests/cuda.yaml"
  OS: "centos7"
  OS_NAME: "centos"
  OS_VERSION: "7"
  CUDA_VERSION: "10.0"

.centos7_10_0_x86_64_only: &centos7_10_0_x86_64_only
  variables:
    <<: *centos7_10_0_x86_64_variables
  only:
    variables:
      - $centos7_10_0_x86_64 == "true"
      - $all == "true"

centos7-v10.0-x86_64:
  <<: *cuda_base_definition
  <<: *centos7_10_0_x86_64_only

centos7-v10.0-cudnn7-x86_64:
  <<: *cudnn_definition
  <<: *centos7_10_0_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *centos7_10_0_x86_64_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: centos7-v10.0-x86_64
      artifacts: true

centos7-v10.0-test-x86_64:
  needs: ["centos7-v10.0-x86_64"]
  <<: *test_definition
  <<: *centos7_10_0_x86_64_only

centos7-v10.0-scan-x86_64:
  needs: ["centos7-v10.0-x86_64", "centos7-v10.0-test-x86_64"]
  <<: *scan_definition
  <<: *centos7_10_0_x86_64_only

centos7-v10.0-deploy-x86_64:
  <<: *deploy_definition
  <<: *centos7_10_0_x86_64_only
  needs:
    - job: centos7-v10.0-test-x86_64
      artifacts: true
    - job: centos7-v10.0-scan-x86_64
    - job: centos7-v10.0-cudnn7-x86_64

.centos7_10_0_ppc64le_variables: &centos7_10_0_ppc64le_variables
  ARCH: "ppc64le"
  DIST_BASE_PATH: "dist/10.0"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda/cuda-ppc64le"
  MANIFEST: "manifests/cuda.yaml"
  OS: "centos7"
  OS_NAME: "centos"
  OS_VERSION: "7"
  CUDA_VERSION: "10.0"

.centos7_10_0_ppc64le_only: &centos7_10_0_ppc64le_only
  variables:
    <<: *centos7_10_0_ppc64le_variables
  only:
    variables:
      - $centos7_10_0_ppc64le == "true"
      - $all == "true"

centos7-v10.0-ppc64le:
  <<: *cuda_base_definition
  <<: *centos7_10_0_ppc64le_only

centos7-v10.0-cudnn7-ppc64le:
  <<: *cudnn_definition
  <<: *centos7_10_0_ppc64le_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *centos7_10_0_ppc64le_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: centos7-v10.0-ppc64le
      artifacts: true

centos7-v10.0-test-ppc64le:
  needs: ["centos7-v10.0-ppc64le"]
  <<: *test_definition
  <<: *centos7_10_0_ppc64le_only

centos7-v10.0-scan-ppc64le:
  needs: ["centos7-v10.0-ppc64le", "centos7-v10.0-test-ppc64le"]
  <<: *scan_definition
  <<: *centos7_10_0_ppc64le_only

centos7-v10.0-deploy-ppc64le:
  <<: *deploy_definition
  <<: *centos7_10_0_ppc64le_only
  needs:
    - job: centos7-v10.0-test-ppc64le
      artifacts: true
    - job: centos7-v10.0-scan-ppc64le
    - job: centos7-v10.0-cudnn7-ppc64le

.centos6_10_0_x86_64_variables: &centos6_10_0_x86_64_variables
  ARCH: "x86_64"
  DIST_BASE_PATH: "dist/10.0"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda"
  MANIFEST: "manifests/cuda.yaml"
  OS: "centos6"
  OS_NAME: "centos"
  OS_VERSION: "6"
  CUDA_VERSION: "10.0"

.centos6_10_0_x86_64_only: &centos6_10_0_x86_64_only
  variables:
    <<: *centos6_10_0_x86_64_variables
  only:
    variables:
      - $centos6_10_0_x86_64 == "true"
      - $all == "true"

centos6-v10.0-x86_64:
  <<: *cuda_base_definition
  <<: *centos6_10_0_x86_64_only

centos6-v10.0-cudnn7-x86_64:
  <<: *cudnn_definition
  <<: *centos6_10_0_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *centos6_10_0_x86_64_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: centos6-v10.0-x86_64
      artifacts: true

centos6-v10.0-test-x86_64:
  needs: ["centos6-v10.0-x86_64"]
  <<: *test_definition
  <<: *centos6_10_0_x86_64_only

centos6-v10.0-scan-x86_64:
  needs: ["centos6-v10.0-x86_64", "centos6-v10.0-test-x86_64"]
  <<: *scan_definition
  <<: *centos6_10_0_x86_64_only

centos6-v10.0-deploy-x86_64:
  <<: *deploy_definition
  <<: *centos6_10_0_x86_64_only
  needs:
    - job: centos6-v10.0-test-x86_64
      artifacts: true
    - job: centos6-v10.0-scan-x86_64
    - job: centos6-v10.0-cudnn7-x86_64

.ubi7_10_0_x86_64_variables: &ubi7_10_0_x86_64_variables
  ARCH: "x86_64"
  DIST_BASE_PATH: "dist/10.0"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda"
  MANIFEST: "manifests/cuda.yaml"
  OS: "ubi7"
  OS_NAME: "ubi"
  OS_VERSION: "7"
  CUDA_VERSION: "10.0"

.ubi7_10_0_x86_64_only: &ubi7_10_0_x86_64_only
  variables:
    <<: *ubi7_10_0_x86_64_variables
  only:
    variables:
      - $ubi7_10_0_x86_64 == "true"
      - $all == "true"

ubi7-v10.0-x86_64:
  <<: *cuda_base_definition
  <<: *ubi7_10_0_x86_64_only

ubi7-v10.0-cudnn7-x86_64:
  <<: *cudnn_definition
  <<: *ubi7_10_0_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubi7_10_0_x86_64_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: ubi7-v10.0-x86_64
      artifacts: true

ubi7-v10.0-test-x86_64:
  needs: ["ubi7-v10.0-x86_64"]
  <<: *test_definition
  <<: *ubi7_10_0_x86_64_only

ubi7-v10.0-scan-x86_64:
  needs: ["ubi7-v10.0-x86_64", "ubi7-v10.0-test-x86_64"]
  <<: *scan_definition
  <<: *ubi7_10_0_x86_64_only

ubi7-v10.0-deploy-x86_64:
  <<: *deploy_definition
  <<: *ubi7_10_0_x86_64_only
  needs:
    - job: ubi7-v10.0-test-x86_64
      artifacts: true
    - job: ubi7-v10.0-scan-x86_64
    - job: ubi7-v10.0-cudnn7-x86_64

.ubi7_10_0_ppc64le_variables: &ubi7_10_0_ppc64le_variables
  ARCH: "ppc64le"
  DIST_BASE_PATH: "dist/10.0"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda/cuda-ppc64le"
  MANIFEST: "manifests/cuda.yaml"
  OS: "ubi7"
  OS_NAME: "ubi"
  OS_VERSION: "7"
  CUDA_VERSION: "10.0"

.ubi7_10_0_ppc64le_only: &ubi7_10_0_ppc64le_only
  variables:
    <<: *ubi7_10_0_ppc64le_variables
  only:
    variables:
      - $ubi7_10_0_ppc64le == "true"
      - $all == "true"

ubi7-v10.0-ppc64le:
  <<: *cuda_base_definition
  <<: *ubi7_10_0_ppc64le_only

ubi7-v10.0-cudnn7-ppc64le:
  <<: *cudnn_definition
  <<: *ubi7_10_0_ppc64le_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubi7_10_0_ppc64le_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: ubi7-v10.0-ppc64le
      artifacts: true

ubi7-v10.0-test-ppc64le:
  needs: ["ubi7-v10.0-ppc64le"]
  <<: *test_definition
  <<: *ubi7_10_0_ppc64le_only

ubi7-v10.0-scan-ppc64le:
  needs: ["ubi7-v10.0-ppc64le", "ubi7-v10.0-test-ppc64le"]
  <<: *scan_definition
  <<: *ubi7_10_0_ppc64le_only

ubi7-v10.0-deploy-ppc64le:
  <<: *deploy_definition
  <<: *ubi7_10_0_ppc64le_only
  needs:
    - job: ubi7-v10.0-test-ppc64le
      artifacts: true
    - job: ubi7-v10.0-scan-ppc64le
    - job: ubi7-v10.0-cudnn7-ppc64le

.ubuntu18_04_9_2_x86_64_variables: &ubuntu18_04_9_2_x86_64_variables
  ARCH: "x86_64"
  DIST_BASE_PATH: "dist/9.2"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda"
  MANIFEST: "manifests/cuda.yaml"
  NO_OS_SUFFIX: "true"
  OS: "ubuntu18.04"
  OS_NAME: "ubuntu"
  OS_VERSION: "18.04"
  CUDA_VERSION: "9.2"

.ubuntu18_04_9_2_x86_64_only: &ubuntu18_04_9_2_x86_64_only
  variables:
    <<: *ubuntu18_04_9_2_x86_64_variables
  only:
    variables:
      - $ubuntu18_04_9_2_x86_64 == "true"
      - $all == "true"

ubuntu18.04-v9.2-x86_64:
  <<: *cuda_base_definition
  <<: *ubuntu18_04_9_2_x86_64_only

ubuntu18.04-v9.2-cudnn7-x86_64:
  <<: *cudnn_definition
  <<: *ubuntu18_04_9_2_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubuntu18_04_9_2_x86_64_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: ubuntu18.04-v9.2-x86_64
      artifacts: true

ubuntu18.04-v9.2-test-x86_64:
  needs: ["ubuntu18.04-v9.2-x86_64"]
  <<: *test_definition
  <<: *ubuntu18_04_9_2_x86_64_only

ubuntu18.04-v9.2-scan-x86_64:
  needs: ["ubuntu18.04-v9.2-x86_64", "ubuntu18.04-v9.2-test-x86_64"]
  <<: *scan_definition
  <<: *ubuntu18_04_9_2_x86_64_only

ubuntu18.04-v9.2-deploy-x86_64:
  <<: *deploy_definition
  <<: *ubuntu18_04_9_2_x86_64_only
  needs:
    - job: ubuntu18.04-v9.2-test-x86_64
      artifacts: true
    - job: ubuntu18.04-v9.2-scan-x86_64
    - job: ubuntu18.04-v9.2-cudnn7-x86_64

.ubuntu16_04_9_2_x86_64_variables: &ubuntu16_04_9_2_x86_64_variables
  ARCH: "x86_64"
  DIST_BASE_PATH: "dist/9.2"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda"
  MANIFEST: "manifests/cuda.yaml"
  OS: "ubuntu16.04"
  OS_NAME: "ubuntu"
  OS_VERSION: "16.04"
  CUDA_VERSION: "9.2"

.ubuntu16_04_9_2_x86_64_only: &ubuntu16_04_9_2_x86_64_only
  variables:
    <<: *ubuntu16_04_9_2_x86_64_variables
  only:
    variables:
      - $ubuntu16_04_9_2_x86_64 == "true"
      - $all == "true"

ubuntu16.04-v9.2-x86_64:
  <<: *cuda_base_definition
  <<: *ubuntu16_04_9_2_x86_64_only

ubuntu16.04-v9.2-cudnn7-x86_64:
  <<: *cudnn_definition
  <<: *ubuntu16_04_9_2_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubuntu16_04_9_2_x86_64_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: ubuntu16.04-v9.2-x86_64
      artifacts: true

ubuntu16.04-v9.2-test-x86_64:
  needs: ["ubuntu16.04-v9.2-x86_64"]
  <<: *test_definition
  <<: *ubuntu16_04_9_2_x86_64_only

ubuntu16.04-v9.2-scan-x86_64:
  needs: ["ubuntu16.04-v9.2-x86_64", "ubuntu16.04-v9.2-test-x86_64"]
  <<: *scan_definition
  <<: *ubuntu16_04_9_2_x86_64_only

ubuntu16.04-v9.2-deploy-x86_64:
  <<: *deploy_definition
  <<: *ubuntu16_04_9_2_x86_64_only
  needs:
    - job: ubuntu16.04-v9.2-test-x86_64
      artifacts: true
    - job: ubuntu16.04-v9.2-scan-x86_64
    - job: ubuntu16.04-v9.2-cudnn7-x86_64

.centos7_9_2_x86_64_variables: &centos7_9_2_x86_64_variables
  ARCH: "x86_64"
  DIST_BASE_PATH: "dist/9.2"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda"
  MANIFEST: "manifests/cuda.yaml"
  OS: "centos7"
  OS_NAME: "centos"
  OS_VERSION: "7"
  CUDA_VERSION: "9.2"

.centos7_9_2_x86_64_only: &centos7_9_2_x86_64_only
  variables:
    <<: *centos7_9_2_x86_64_variables
  only:
    variables:
      - $centos7_9_2_x86_64 == "true"
      - $all == "true"

centos7-v9.2-x86_64:
  <<: *cuda_base_definition
  <<: *centos7_9_2_x86_64_only

centos7-v9.2-cudnn7-x86_64:
  <<: *cudnn_definition
  <<: *centos7_9_2_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *centos7_9_2_x86_64_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: centos7-v9.2-x86_64
      artifacts: true

centos7-v9.2-test-x86_64:
  needs: ["centos7-v9.2-x86_64"]
  <<: *test_definition
  <<: *centos7_9_2_x86_64_only

centos7-v9.2-scan-x86_64:
  needs: ["centos7-v9.2-x86_64", "centos7-v9.2-test-x86_64"]
  <<: *scan_definition
  <<: *centos7_9_2_x86_64_only

centos7-v9.2-deploy-x86_64:
  <<: *deploy_definition
  <<: *centos7_9_2_x86_64_only
  needs:
    - job: centos7-v9.2-test-x86_64
      artifacts: true
    - job: centos7-v9.2-scan-x86_64
    - job: centos7-v9.2-cudnn7-x86_64

.centos7_9_2_ppc64le_variables: &centos7_9_2_ppc64le_variables
  ARCH: "ppc64le"
  DIST_BASE_PATH: "dist/9.2"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda/cuda-ppc64le"
  MANIFEST: "manifests/cuda.yaml"
  OS: "centos7"
  OS_NAME: "centos"
  OS_VERSION: "7"
  CUDA_VERSION: "9.2"

.centos7_9_2_ppc64le_only: &centos7_9_2_ppc64le_only
  variables:
    <<: *centos7_9_2_ppc64le_variables
  only:
    variables:
      - $centos7_9_2_ppc64le == "true"
      - $all == "true"

centos7-v9.2-ppc64le:
  <<: *cuda_base_definition
  <<: *centos7_9_2_ppc64le_only

centos7-v9.2-cudnn7-ppc64le:
  <<: *cudnn_definition
  <<: *centos7_9_2_ppc64le_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *centos7_9_2_ppc64le_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: centos7-v9.2-ppc64le
      artifacts: true

centos7-v9.2-test-ppc64le:
  needs: ["centos7-v9.2-ppc64le"]
  <<: *test_definition
  <<: *centos7_9_2_ppc64le_only

centos7-v9.2-scan-ppc64le:
  needs: ["centos7-v9.2-ppc64le", "centos7-v9.2-test-ppc64le"]
  <<: *scan_definition
  <<: *centos7_9_2_ppc64le_only

centos7-v9.2-deploy-ppc64le:
  <<: *deploy_definition
  <<: *centos7_9_2_ppc64le_only
  needs:
    - job: centos7-v9.2-test-ppc64le
      artifacts: true
    - job: centos7-v9.2-scan-ppc64le
    - job: centos7-v9.2-cudnn7-ppc64le

.centos6_9_2_x86_64_variables: &centos6_9_2_x86_64_variables
  ARCH: "x86_64"
  DIST_BASE_PATH: "dist/9.2"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda"
  MANIFEST: "manifests/cuda.yaml"
  OS: "centos6"
  OS_NAME: "centos"
  OS_VERSION: "6"
  CUDA_VERSION: "9.2"

.centos6_9_2_x86_64_only: &centos6_9_2_x86_64_only
  variables:
    <<: *centos6_9_2_x86_64_variables
  only:
    variables:
      - $centos6_9_2_x86_64 == "true"
      - $all == "true"

centos6-v9.2-x86_64:
  <<: *cuda_base_definition
  <<: *centos6_9_2_x86_64_only

centos6-v9.2-cudnn7-x86_64:
  <<: *cudnn_definition
  <<: *centos6_9_2_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *centos6_9_2_x86_64_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: centos6-v9.2-x86_64
      artifacts: true

centos6-v9.2-test-x86_64:
  needs: ["centos6-v9.2-x86_64"]
  <<: *test_definition
  <<: *centos6_9_2_x86_64_only

centos6-v9.2-scan-x86_64:
  needs: ["centos6-v9.2-x86_64", "centos6-v9.2-test-x86_64"]
  <<: *scan_definition
  <<: *centos6_9_2_x86_64_only

centos6-v9.2-deploy-x86_64:
  <<: *deploy_definition
  <<: *centos6_9_2_x86_64_only
  needs:
    - job: centos6-v9.2-test-x86_64
      artifacts: true
    - job: centos6-v9.2-scan-x86_64
    - job: centos6-v9.2-cudnn7-x86_64

.ubi7_9_2_x86_64_variables: &ubi7_9_2_x86_64_variables
  ARCH: "x86_64"
  DIST_BASE_PATH: "dist/9.2"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda"
  MANIFEST: "manifests/cuda.yaml"
  OS: "ubi7"
  OS_NAME: "ubi"
  OS_VERSION: "7"
  CUDA_VERSION: "9.2"

.ubi7_9_2_x86_64_only: &ubi7_9_2_x86_64_only
  variables:
    <<: *ubi7_9_2_x86_64_variables
  only:
    variables:
      - $ubi7_9_2_x86_64 == "true"
      - $all == "true"

ubi7-v9.2-x86_64:
  <<: *cuda_base_definition
  <<: *ubi7_9_2_x86_64_only

ubi7-v9.2-cudnn7-x86_64:
  <<: *cudnn_definition
  <<: *ubi7_9_2_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubi7_9_2_x86_64_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: ubi7-v9.2-x86_64
      artifacts: true

ubi7-v9.2-test-x86_64:
  needs: ["ubi7-v9.2-x86_64"]
  <<: *test_definition
  <<: *ubi7_9_2_x86_64_only

ubi7-v9.2-scan-x86_64:
  needs: ["ubi7-v9.2-x86_64", "ubi7-v9.2-test-x86_64"]
  <<: *scan_definition
  <<: *ubi7_9_2_x86_64_only

ubi7-v9.2-deploy-x86_64:
  <<: *deploy_definition
  <<: *ubi7_9_2_x86_64_only
  needs:
    - job: ubi7-v9.2-test-x86_64
      artifacts: true
    - job: ubi7-v9.2-scan-x86_64
    - job: ubi7-v9.2-cudnn7-x86_64

.ubi7_9_2_ppc64le_variables: &ubi7_9_2_ppc64le_variables
  ARCH: "ppc64le"
  DIST_BASE_PATH: "dist/9.2"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda/cuda-ppc64le"
  MANIFEST: "manifests/cuda.yaml"
  OS: "ubi7"
  OS_NAME: "ubi"
  OS_VERSION: "7"
  CUDA_VERSION: "9.2"

.ubi7_9_2_ppc64le_only: &ubi7_9_2_ppc64le_only
  variables:
    <<: *ubi7_9_2_ppc64le_variables
  only:
    variables:
      - $ubi7_9_2_ppc64le == "true"
      - $all == "true"

ubi7-v9.2-ppc64le:
  <<: *cuda_base_definition
  <<: *ubi7_9_2_ppc64le_only

ubi7-v9.2-cudnn7-ppc64le:
  <<: *cudnn_definition
  <<: *ubi7_9_2_ppc64le_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubi7_9_2_ppc64le_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: ubi7-v9.2-ppc64le
      artifacts: true

ubi7-v9.2-test-ppc64le:
  needs: ["ubi7-v9.2-ppc64le"]
  <<: *test_definition
  <<: *ubi7_9_2_ppc64le_only

ubi7-v9.2-scan-ppc64le:
  needs: ["ubi7-v9.2-ppc64le", "ubi7-v9.2-test-ppc64le"]
  <<: *scan_definition
  <<: *ubi7_9_2_ppc64le_only

ubi7-v9.2-deploy-ppc64le:
  <<: *deploy_definition
  <<: *ubi7_9_2_ppc64le_only
  needs:
    - job: ubi7-v9.2-test-ppc64le
      artifacts: true
    - job: ubi7-v9.2-scan-ppc64le
    - job: ubi7-v9.2-cudnn7-ppc64le

.ubuntu16_04_9_1_x86_64_variables: &ubuntu16_04_9_1_x86_64_variables
  ARCH: "x86_64"
  DIST_BASE_PATH: "dist/9.1"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda"
  MANIFEST: "manifests/cuda.yaml"
  NO_OS_SUFFIX: "true"
  OS: "ubuntu16.04"
  OS_NAME: "ubuntu"
  OS_VERSION: "16.04"
  CUDA_VERSION: "9.1"

.ubuntu16_04_9_1_x86_64_only: &ubuntu16_04_9_1_x86_64_only
  variables:
    <<: *ubuntu16_04_9_1_x86_64_variables
  only:
    variables:
      - $ubuntu16_04_9_1_x86_64 == "true"
      - $all == "true"

ubuntu16.04-v9.1-x86_64:
  <<: *cuda_base_definition
  <<: *ubuntu16_04_9_1_x86_64_only

ubuntu16.04-v9.1-cudnn7-x86_64:
  <<: *cudnn_definition
  <<: *ubuntu16_04_9_1_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubuntu16_04_9_1_x86_64_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: ubuntu16.04-v9.1-x86_64
      artifacts: true

ubuntu16.04-v9.1-test-x86_64:
  needs: ["ubuntu16.04-v9.1-x86_64"]
  <<: *test_definition
  <<: *ubuntu16_04_9_1_x86_64_only

ubuntu16.04-v9.1-scan-x86_64:
  needs: ["ubuntu16.04-v9.1-x86_64", "ubuntu16.04-v9.1-test-x86_64"]
  <<: *scan_definition
  <<: *ubuntu16_04_9_1_x86_64_only

ubuntu16.04-v9.1-deploy-x86_64:
  <<: *deploy_definition
  <<: *ubuntu16_04_9_1_x86_64_only
  needs:
    - job: ubuntu16.04-v9.1-test-x86_64
      artifacts: true
    - job: ubuntu16.04-v9.1-scan-x86_64
    - job: ubuntu16.04-v9.1-cudnn7-x86_64

.ubuntu16_04_9_1_ppc64le_variables: &ubuntu16_04_9_1_ppc64le_variables
  ARCH: "ppc64le"
  DIST_BASE_PATH: "dist/9.1"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda/cuda-ppc64le"
  MANIFEST: "manifests/cuda.yaml"
  NO_OS_SUFFIX: "true"
  OS: "ubuntu16.04"
  OS_NAME: "ubuntu"
  OS_VERSION: "16.04"
  CUDA_VERSION: "9.1"

.ubuntu16_04_9_1_ppc64le_only: &ubuntu16_04_9_1_ppc64le_only
  variables:
    <<: *ubuntu16_04_9_1_ppc64le_variables
  only:
    variables:
      - $ubuntu16_04_9_1_ppc64le == "true"
      - $all == "true"

ubuntu16.04-v9.1-ppc64le:
  <<: *cuda_base_definition
  <<: *ubuntu16_04_9_1_ppc64le_only

ubuntu16.04-v9.1-cudnn7-ppc64le:
  <<: *cudnn_definition
  <<: *ubuntu16_04_9_1_ppc64le_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubuntu16_04_9_1_ppc64le_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: ubuntu16.04-v9.1-ppc64le
      artifacts: true

ubuntu16.04-v9.1-test-ppc64le:
  needs: ["ubuntu16.04-v9.1-ppc64le"]
  <<: *test_definition
  <<: *ubuntu16_04_9_1_ppc64le_only

ubuntu16.04-v9.1-scan-ppc64le:
  needs: ["ubuntu16.04-v9.1-ppc64le", "ubuntu16.04-v9.1-test-ppc64le"]
  <<: *scan_definition
  <<: *ubuntu16_04_9_1_ppc64le_only

ubuntu16.04-v9.1-deploy-ppc64le:
  <<: *deploy_definition
  <<: *ubuntu16_04_9_1_ppc64le_only
  needs:
    - job: ubuntu16.04-v9.1-test-ppc64le
      artifacts: true
    - job: ubuntu16.04-v9.1-scan-ppc64le
    - job: ubuntu16.04-v9.1-cudnn7-ppc64le

.centos7_9_1_x86_64_variables: &centos7_9_1_x86_64_variables
  ARCH: "x86_64"
  DIST_BASE_PATH: "dist/9.1"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda"
  MANIFEST: "manifests/cuda.yaml"
  OS: "centos7"
  OS_NAME: "centos"
  OS_VERSION: "7"
  CUDA_VERSION: "9.1"

.centos7_9_1_x86_64_only: &centos7_9_1_x86_64_only
  variables:
    <<: *centos7_9_1_x86_64_variables
  only:
    variables:
      - $centos7_9_1_x86_64 == "true"
      - $all == "true"

centos7-v9.1-x86_64:
  <<: *cuda_base_definition
  <<: *centos7_9_1_x86_64_only

centos7-v9.1-cudnn7-x86_64:
  <<: *cudnn_definition
  <<: *centos7_9_1_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *centos7_9_1_x86_64_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: centos7-v9.1-x86_64
      artifacts: true

centos7-v9.1-test-x86_64:
  needs: ["centos7-v9.1-x86_64"]
  <<: *test_definition
  <<: *centos7_9_1_x86_64_only

centos7-v9.1-scan-x86_64:
  needs: ["centos7-v9.1-x86_64", "centos7-v9.1-test-x86_64"]
  <<: *scan_definition
  <<: *centos7_9_1_x86_64_only

centos7-v9.1-deploy-x86_64:
  <<: *deploy_definition
  <<: *centos7_9_1_x86_64_only
  needs:
    - job: centos7-v9.1-test-x86_64
      artifacts: true
    - job: centos7-v9.1-scan-x86_64
    - job: centos7-v9.1-cudnn7-x86_64

.centos7_9_1_ppc64le_variables: &centos7_9_1_ppc64le_variables
  ARCH: "ppc64le"
  DIST_BASE_PATH: "dist/9.1"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda/cuda-ppc64le"
  MANIFEST: "manifests/cuda.yaml"
  OS: "centos7"
  OS_NAME: "centos"
  OS_VERSION: "7"
  CUDA_VERSION: "9.1"

.centos7_9_1_ppc64le_only: &centos7_9_1_ppc64le_only
  variables:
    <<: *centos7_9_1_ppc64le_variables
  only:
    variables:
      - $centos7_9_1_ppc64le == "true"
      - $all == "true"

centos7-v9.1-ppc64le:
  <<: *cuda_base_definition
  <<: *centos7_9_1_ppc64le_only

centos7-v9.1-cudnn7-ppc64le:
  <<: *cudnn_definition
  <<: *centos7_9_1_ppc64le_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *centos7_9_1_ppc64le_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: centos7-v9.1-ppc64le
      artifacts: true

centos7-v9.1-test-ppc64le:
  needs: ["centos7-v9.1-ppc64le"]
  <<: *test_definition
  <<: *centos7_9_1_ppc64le_only

centos7-v9.1-scan-ppc64le:
  needs: ["centos7-v9.1-ppc64le", "centos7-v9.1-test-ppc64le"]
  <<: *scan_definition
  <<: *centos7_9_1_ppc64le_only

centos7-v9.1-deploy-ppc64le:
  <<: *deploy_definition
  <<: *centos7_9_1_ppc64le_only
  needs:
    - job: centos7-v9.1-test-ppc64le
      artifacts: true
    - job: centos7-v9.1-scan-ppc64le
    - job: centos7-v9.1-cudnn7-ppc64le

.centos6_9_1_x86_64_variables: &centos6_9_1_x86_64_variables
  ARCH: "x86_64"
  DIST_BASE_PATH: "dist/9.1"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda"
  MANIFEST: "manifests/cuda.yaml"
  OS: "centos6"
  OS_NAME: "centos"
  OS_VERSION: "6"
  CUDA_VERSION: "9.1"

.centos6_9_1_x86_64_only: &centos6_9_1_x86_64_only
  variables:
    <<: *centos6_9_1_x86_64_variables
  only:
    variables:
      - $centos6_9_1_x86_64 == "true"
      - $all == "true"

centos6-v9.1-x86_64:
  <<: *cuda_base_definition
  <<: *centos6_9_1_x86_64_only

centos6-v9.1-cudnn7-x86_64:
  <<: *cudnn_definition
  <<: *centos6_9_1_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *centos6_9_1_x86_64_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: centos6-v9.1-x86_64
      artifacts: true

centos6-v9.1-test-x86_64:
  needs: ["centos6-v9.1-x86_64"]
  <<: *test_definition
  <<: *centos6_9_1_x86_64_only

centos6-v9.1-scan-x86_64:
  needs: ["centos6-v9.1-x86_64", "centos6-v9.1-test-x86_64"]
  <<: *scan_definition
  <<: *centos6_9_1_x86_64_only

centos6-v9.1-deploy-x86_64:
  <<: *deploy_definition
  <<: *centos6_9_1_x86_64_only
  needs:
    - job: centos6-v9.1-test-x86_64
      artifacts: true
    - job: centos6-v9.1-scan-x86_64
    - job: centos6-v9.1-cudnn7-x86_64

.ubi7_9_1_x86_64_variables: &ubi7_9_1_x86_64_variables
  ARCH: "x86_64"
  DIST_BASE_PATH: "dist/9.1"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda"
  MANIFEST: "manifests/cuda.yaml"
  OS: "ubi7"
  OS_NAME: "ubi"
  OS_VERSION: "7"
  CUDA_VERSION: "9.1"

.ubi7_9_1_x86_64_only: &ubi7_9_1_x86_64_only
  variables:
    <<: *ubi7_9_1_x86_64_variables
  only:
    variables:
      - $ubi7_9_1_x86_64 == "true"
      - $all == "true"

ubi7-v9.1-x86_64:
  <<: *cuda_base_definition
  <<: *ubi7_9_1_x86_64_only

ubi7-v9.1-cudnn7-x86_64:
  <<: *cudnn_definition
  <<: *ubi7_9_1_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubi7_9_1_x86_64_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: ubi7-v9.1-x86_64
      artifacts: true

ubi7-v9.1-test-x86_64:
  needs: ["ubi7-v9.1-x86_64"]
  <<: *test_definition
  <<: *ubi7_9_1_x86_64_only

ubi7-v9.1-scan-x86_64:
  needs: ["ubi7-v9.1-x86_64", "ubi7-v9.1-test-x86_64"]
  <<: *scan_definition
  <<: *ubi7_9_1_x86_64_only

ubi7-v9.1-deploy-x86_64:
  <<: *deploy_definition
  <<: *ubi7_9_1_x86_64_only
  needs:
    - job: ubi7-v9.1-test-x86_64
      artifacts: true
    - job: ubi7-v9.1-scan-x86_64
    - job: ubi7-v9.1-cudnn7-x86_64

.ubi7_9_1_ppc64le_variables: &ubi7_9_1_ppc64le_variables
  ARCH: "ppc64le"
  DIST_BASE_PATH: "dist/9.1"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda/cuda-ppc64le"
  MANIFEST: "manifests/cuda.yaml"
  OS: "ubi7"
  OS_NAME: "ubi"
  OS_VERSION: "7"
  CUDA_VERSION: "9.1"

.ubi7_9_1_ppc64le_only: &ubi7_9_1_ppc64le_only
  variables:
    <<: *ubi7_9_1_ppc64le_variables
  only:
    variables:
      - $ubi7_9_1_ppc64le == "true"
      - $all == "true"

ubi7-v9.1-ppc64le:
  <<: *cuda_base_definition
  <<: *ubi7_9_1_ppc64le_only

ubi7-v9.1-cudnn7-ppc64le:
  <<: *cudnn_definition
  <<: *ubi7_9_1_ppc64le_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubi7_9_1_ppc64le_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: ubi7-v9.1-ppc64le
      artifacts: true

ubi7-v9.1-test-ppc64le:
  needs: ["ubi7-v9.1-ppc64le"]
  <<: *test_definition
  <<: *ubi7_9_1_ppc64le_only

ubi7-v9.1-scan-ppc64le:
  needs: ["ubi7-v9.1-ppc64le", "ubi7-v9.1-test-ppc64le"]
  <<: *scan_definition
  <<: *ubi7_9_1_ppc64le_only

ubi7-v9.1-deploy-ppc64le:
  <<: *deploy_definition
  <<: *ubi7_9_1_ppc64le_only
  needs:
    - job: ubi7-v9.1-test-ppc64le
      artifacts: true
    - job: ubi7-v9.1-scan-ppc64le
    - job: ubi7-v9.1-cudnn7-ppc64le

.ubuntu16_04_9_0_x86_64_variables: &ubuntu16_04_9_0_x86_64_variables
  ARCH: "x86_64"
  DIST_BASE_PATH: "dist/9.0"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda"
  MANIFEST: "manifests/cuda.yaml"
  NO_OS_SUFFIX: "true"
  OS: "ubuntu16.04"
  OS_NAME: "ubuntu"
  OS_VERSION: "16.04"
  CUDA_VERSION: "9.0"

.ubuntu16_04_9_0_x86_64_only: &ubuntu16_04_9_0_x86_64_only
  variables:
    <<: *ubuntu16_04_9_0_x86_64_variables
  only:
    variables:
      - $ubuntu16_04_9_0_x86_64 == "true"
      - $all == "true"

ubuntu16.04-v9.0-x86_64:
  <<: *cuda_base_definition
  <<: *ubuntu16_04_9_0_x86_64_only

ubuntu16.04-v9.0-cudnn7-x86_64:
  <<: *cudnn_definition
  <<: *ubuntu16_04_9_0_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubuntu16_04_9_0_x86_64_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: ubuntu16.04-v9.0-x86_64
      artifacts: true

ubuntu16.04-v9.0-test-x86_64:
  needs: ["ubuntu16.04-v9.0-x86_64"]
  <<: *test_definition
  <<: *ubuntu16_04_9_0_x86_64_only

ubuntu16.04-v9.0-scan-x86_64:
  needs: ["ubuntu16.04-v9.0-x86_64", "ubuntu16.04-v9.0-test-x86_64"]
  <<: *scan_definition
  <<: *ubuntu16_04_9_0_x86_64_only

ubuntu16.04-v9.0-deploy-x86_64:
  <<: *deploy_definition
  <<: *ubuntu16_04_9_0_x86_64_only
  needs:
    - job: ubuntu16.04-v9.0-test-x86_64
      artifacts: true
    - job: ubuntu16.04-v9.0-scan-x86_64
    - job: ubuntu16.04-v9.0-cudnn7-x86_64

.ubuntu16_04_9_0_ppc64le_variables: &ubuntu16_04_9_0_ppc64le_variables
  ARCH: "ppc64le"
  DIST_BASE_PATH: "dist/9.0"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda/cuda-ppc64le"
  MANIFEST: "manifests/cuda.yaml"
  NO_OS_SUFFIX: "true"
  OS: "ubuntu16.04"
  OS_NAME: "ubuntu"
  OS_VERSION: "16.04"
  CUDA_VERSION: "9.0"

.ubuntu16_04_9_0_ppc64le_only: &ubuntu16_04_9_0_ppc64le_only
  variables:
    <<: *ubuntu16_04_9_0_ppc64le_variables
  only:
    variables:
      - $ubuntu16_04_9_0_ppc64le == "true"
      - $all == "true"

ubuntu16.04-v9.0-ppc64le:
  <<: *cuda_base_definition
  <<: *ubuntu16_04_9_0_ppc64le_only

ubuntu16.04-v9.0-cudnn7-ppc64le:
  <<: *cudnn_definition
  <<: *ubuntu16_04_9_0_ppc64le_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubuntu16_04_9_0_ppc64le_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: ubuntu16.04-v9.0-ppc64le
      artifacts: true

ubuntu16.04-v9.0-test-ppc64le:
  needs: ["ubuntu16.04-v9.0-ppc64le"]
  <<: *test_definition
  <<: *ubuntu16_04_9_0_ppc64le_only

ubuntu16.04-v9.0-scan-ppc64le:
  needs: ["ubuntu16.04-v9.0-ppc64le", "ubuntu16.04-v9.0-test-ppc64le"]
  <<: *scan_definition
  <<: *ubuntu16_04_9_0_ppc64le_only

ubuntu16.04-v9.0-deploy-ppc64le:
  <<: *deploy_definition
  <<: *ubuntu16_04_9_0_ppc64le_only
  needs:
    - job: ubuntu16.04-v9.0-test-ppc64le
      artifacts: true
    - job: ubuntu16.04-v9.0-scan-ppc64le
    - job: ubuntu16.04-v9.0-cudnn7-ppc64le

.centos7_9_0_x86_64_variables: &centos7_9_0_x86_64_variables
  ARCH: "x86_64"
  DIST_BASE_PATH: "dist/9.0"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda"
  MANIFEST: "manifests/cuda.yaml"
  OS: "centos7"
  OS_NAME: "centos"
  OS_VERSION: "7"
  CUDA_VERSION: "9.0"

.centos7_9_0_x86_64_only: &centos7_9_0_x86_64_only
  variables:
    <<: *centos7_9_0_x86_64_variables
  only:
    variables:
      - $centos7_9_0_x86_64 == "true"
      - $all == "true"

centos7-v9.0-x86_64:
  <<: *cuda_base_definition
  <<: *centos7_9_0_x86_64_only

centos7-v9.0-cudnn7-x86_64:
  <<: *cudnn_definition
  <<: *centos7_9_0_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *centos7_9_0_x86_64_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: centos7-v9.0-x86_64
      artifacts: true

centos7-v9.0-test-x86_64:
  needs: ["centos7-v9.0-x86_64"]
  <<: *test_definition
  <<: *centos7_9_0_x86_64_only

centos7-v9.0-scan-x86_64:
  needs: ["centos7-v9.0-x86_64", "centos7-v9.0-test-x86_64"]
  <<: *scan_definition
  <<: *centos7_9_0_x86_64_only

centos7-v9.0-deploy-x86_64:
  <<: *deploy_definition
  <<: *centos7_9_0_x86_64_only
  needs:
    - job: centos7-v9.0-test-x86_64
      artifacts: true
    - job: centos7-v9.0-scan-x86_64
    - job: centos7-v9.0-cudnn7-x86_64

.centos7_9_0_ppc64le_variables: &centos7_9_0_ppc64le_variables
  ARCH: "ppc64le"
  DIST_BASE_PATH: "dist/9.0"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda/cuda-ppc64le"
  MANIFEST: "manifests/cuda.yaml"
  OS: "centos7"
  OS_NAME: "centos"
  OS_VERSION: "7"
  CUDA_VERSION: "9.0"

.centos7_9_0_ppc64le_only: &centos7_9_0_ppc64le_only
  variables:
    <<: *centos7_9_0_ppc64le_variables
  only:
    variables:
      - $centos7_9_0_ppc64le == "true"
      - $all == "true"

centos7-v9.0-ppc64le:
  <<: *cuda_base_definition
  <<: *centos7_9_0_ppc64le_only

centos7-v9.0-cudnn7-ppc64le:
  <<: *cudnn_definition
  <<: *centos7_9_0_ppc64le_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *centos7_9_0_ppc64le_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: centos7-v9.0-ppc64le
      artifacts: true

centos7-v9.0-test-ppc64le:
  needs: ["centos7-v9.0-ppc64le"]
  <<: *test_definition
  <<: *centos7_9_0_ppc64le_only

centos7-v9.0-scan-ppc64le:
  needs: ["centos7-v9.0-ppc64le", "centos7-v9.0-test-ppc64le"]
  <<: *scan_definition
  <<: *centos7_9_0_ppc64le_only

centos7-v9.0-deploy-ppc64le:
  <<: *deploy_definition
  <<: *centos7_9_0_ppc64le_only
  needs:
    - job: centos7-v9.0-test-ppc64le
      artifacts: true
    - job: centos7-v9.0-scan-ppc64le
    - job: centos7-v9.0-cudnn7-ppc64le

.centos6_9_0_x86_64_variables: &centos6_9_0_x86_64_variables
  ARCH: "x86_64"
  DIST_BASE_PATH: "dist/9.0"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda"
  MANIFEST: "manifests/cuda.yaml"
  OS: "centos6"
  OS_NAME: "centos"
  OS_VERSION: "6"
  CUDA_VERSION: "9.0"

.centos6_9_0_x86_64_only: &centos6_9_0_x86_64_only
  variables:
    <<: *centos6_9_0_x86_64_variables
  only:
    variables:
      - $centos6_9_0_x86_64 == "true"
      - $all == "true"

centos6-v9.0-x86_64:
  <<: *cuda_base_definition
  <<: *centos6_9_0_x86_64_only

centos6-v9.0-cudnn7-x86_64:
  <<: *cudnn_definition
  <<: *centos6_9_0_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *centos6_9_0_x86_64_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: centos6-v9.0-x86_64
      artifacts: true

centos6-v9.0-test-x86_64:
  needs: ["centos6-v9.0-x86_64"]
  <<: *test_definition
  <<: *centos6_9_0_x86_64_only

centos6-v9.0-scan-x86_64:
  needs: ["centos6-v9.0-x86_64", "centos6-v9.0-test-x86_64"]
  <<: *scan_definition
  <<: *centos6_9_0_x86_64_only

centos6-v9.0-deploy-x86_64:
  <<: *deploy_definition
  <<: *centos6_9_0_x86_64_only
  needs:
    - job: centos6-v9.0-test-x86_64
      artifacts: true
    - job: centos6-v9.0-scan-x86_64
    - job: centos6-v9.0-cudnn7-x86_64

.ubi7_9_0_x86_64_variables: &ubi7_9_0_x86_64_variables
  ARCH: "x86_64"
  DIST_BASE_PATH: "dist/9.0"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda"
  MANIFEST: "manifests/cuda.yaml"
  OS: "ubi7"
  OS_NAME: "ubi"
  OS_VERSION: "7"
  CUDA_VERSION: "9.0"

.ubi7_9_0_x86_64_only: &ubi7_9_0_x86_64_only
  variables:
    <<: *ubi7_9_0_x86_64_variables
  only:
    variables:
      - $ubi7_9_0_x86_64 == "true"
      - $all == "true"

ubi7-v9.0-x86_64:
  <<: *cuda_base_definition
  <<: *ubi7_9_0_x86_64_only

ubi7-v9.0-cudnn7-x86_64:
  <<: *cudnn_definition
  <<: *ubi7_9_0_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubi7_9_0_x86_64_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: ubi7-v9.0-x86_64
      artifacts: true

ubi7-v9.0-test-x86_64:
  needs: ["ubi7-v9.0-x86_64"]
  <<: *test_definition
  <<: *ubi7_9_0_x86_64_only

ubi7-v9.0-scan-x86_64:
  needs: ["ubi7-v9.0-x86_64", "ubi7-v9.0-test-x86_64"]
  <<: *scan_definition
  <<: *ubi7_9_0_x86_64_only

ubi7-v9.0-deploy-x86_64:
  <<: *deploy_definition
  <<: *ubi7_9_0_x86_64_only
  needs:
    - job: ubi7-v9.0-test-x86_64
      artifacts: true
    - job: ubi7-v9.0-scan-x86_64
    - job: ubi7-v9.0-cudnn7-x86_64

.ubi7_9_0_ppc64le_variables: &ubi7_9_0_ppc64le_variables
  ARCH: "ppc64le"
  DIST_BASE_PATH: "dist/9.0"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda/cuda-ppc64le"
  MANIFEST: "manifests/cuda.yaml"
  OS: "ubi7"
  OS_NAME: "ubi"
  OS_VERSION: "7"
  CUDA_VERSION: "9.0"

.ubi7_9_0_ppc64le_only: &ubi7_9_0_ppc64le_only
  variables:
    <<: *ubi7_9_0_ppc64le_variables
  only:
    variables:
      - $ubi7_9_0_ppc64le == "true"
      - $all == "true"

ubi7-v9.0-ppc64le:
  <<: *cuda_base_definition
  <<: *ubi7_9_0_ppc64le_only

ubi7-v9.0-cudnn7-ppc64le:
  <<: *cudnn_definition
  <<: *ubi7_9_0_ppc64le_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubi7_9_0_ppc64le_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: ubi7-v9.0-ppc64le
      artifacts: true

ubi7-v9.0-test-ppc64le:
  needs: ["ubi7-v9.0-ppc64le"]
  <<: *test_definition
  <<: *ubi7_9_0_ppc64le_only

ubi7-v9.0-scan-ppc64le:
  needs: ["ubi7-v9.0-ppc64le", "ubi7-v9.0-test-ppc64le"]
  <<: *scan_definition
  <<: *ubi7_9_0_ppc64le_only

ubi7-v9.0-deploy-ppc64le:
  <<: *deploy_definition
  <<: *ubi7_9_0_ppc64le_only
  needs:
    - job: ubi7-v9.0-test-ppc64le
      artifacts: true
    - job: ubi7-v9.0-scan-ppc64le
    - job: ubi7-v9.0-cudnn7-ppc64le

.ubuntu16_04_8_0_x86_64_variables: &ubuntu16_04_8_0_x86_64_variables
  ARCH: "x86_64"
  DIST_BASE_PATH: "dist/8.0"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda"
  MANIFEST: "manifests/cuda.yaml"
  NO_OS_SUFFIX: "true"
  OS: "ubuntu16.04"
  OS_NAME: "ubuntu"
  OS_VERSION: "16.04"
  CUDA_VERSION: "8.0"

.ubuntu16_04_8_0_x86_64_only: &ubuntu16_04_8_0_x86_64_only
  variables:
    <<: *ubuntu16_04_8_0_x86_64_variables
  only:
    variables:
      - $ubuntu16_04_8_0_x86_64 == "true"
      - $all == "true"

ubuntu16.04-v8.0-x86_64:
  <<: *cuda_definition_deprecated
  <<: *ubuntu16_04_8_0_x86_64_only

ubuntu16.04-v8.0-cudnn7-x86_64:
  <<: *cudnn_definition
  <<: *ubuntu16_04_8_0_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubuntu16_04_8_0_x86_64_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: ubuntu16.04-v8.0-x86_64
      artifacts: true

ubuntu16.04-v8.0-cudnn6-x86_64:
  <<: *cudnn_definition
  <<: *ubuntu16_04_8_0_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubuntu16_04_8_0_x86_64_variables
    CUDNN_VERSION: "cudnn6"
  artifacts:
    reports:
      dotenv: cudnn6finaltags.env
  needs:
    - job: ubuntu16.04-v8.0-x86_64
      artifacts: true

ubuntu16.04-v8.0-cudnn5-x86_64:
  <<: *cudnn_definition
  <<: *ubuntu16_04_8_0_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubuntu16_04_8_0_x86_64_variables
    CUDNN_VERSION: "cudnn5"
  artifacts:
    reports:
      dotenv: cudnn5finaltags.env
  needs:
    - job: ubuntu16.04-v8.0-x86_64
      artifacts: true

ubuntu16.04-v8.0-test-x86_64:
  needs: ["ubuntu16.04-v8.0-x86_64"]
  <<: *test_definition
  <<: *ubuntu16_04_8_0_x86_64_only

ubuntu16.04-v8.0-scan-x86_64:
  needs: ["ubuntu16.04-v8.0-x86_64", "ubuntu16.04-v8.0-test-x86_64"]
  <<: *scan_definition
  <<: *ubuntu16_04_8_0_x86_64_only

ubuntu16.04-v8.0-deploy-x86_64:
  <<: *deploy_definition
  <<: *ubuntu16_04_8_0_x86_64_only
  needs:
    - job: ubuntu16.04-v8.0-test-x86_64
      artifacts: true
    - job: ubuntu16.04-v8.0-scan-x86_64
    - job: ubuntu16.04-v8.0-cudnn7-x86_64
    - job: ubuntu16.04-v8.0-cudnn6-x86_64
    - job: ubuntu16.04-v8.0-cudnn5-x86_64

.ubuntu16_04_8_0_ppc64le_variables: &ubuntu16_04_8_0_ppc64le_variables
  ARCH: "ppc64le"
  DIST_BASE_PATH: "dist/8.0"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda/cuda-ppc64le"
  MANIFEST: "manifests/cuda.yaml"
  NO_OS_SUFFIX: "true"
  OS: "ubuntu16.04"
  OS_NAME: "ubuntu"
  OS_VERSION: "16.04"
  CUDA_VERSION: "8.0"

.ubuntu16_04_8_0_ppc64le_only: &ubuntu16_04_8_0_ppc64le_only
  variables:
    <<: *ubuntu16_04_8_0_ppc64le_variables
  only:
    variables:
      - $ubuntu16_04_8_0_ppc64le == "true"
      - $all == "true"

ubuntu16.04-v8.0-ppc64le:
  <<: *cuda_definition_deprecated
  <<: *ubuntu16_04_8_0_ppc64le_only

ubuntu16.04-v8.0-cudnn7-ppc64le:
  <<: *cudnn_definition
  <<: *ubuntu16_04_8_0_ppc64le_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubuntu16_04_8_0_ppc64le_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: ubuntu16.04-v8.0-ppc64le
      artifacts: true

ubuntu16.04-v8.0-cudnn6-ppc64le:
  <<: *cudnn_definition
  <<: *ubuntu16_04_8_0_ppc64le_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubuntu16_04_8_0_ppc64le_variables
    CUDNN_VERSION: "cudnn6"
  artifacts:
    reports:
      dotenv: cudnn6finaltags.env
  needs:
    - job: ubuntu16.04-v8.0-ppc64le
      artifacts: true

ubuntu16.04-v8.0-cudnn5-ppc64le:
  <<: *cudnn_definition
  <<: *ubuntu16_04_8_0_ppc64le_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubuntu16_04_8_0_ppc64le_variables
    CUDNN_VERSION: "cudnn5"
  artifacts:
    reports:
      dotenv: cudnn5finaltags.env
  needs:
    - job: ubuntu16.04-v8.0-ppc64le
      artifacts: true

ubuntu16.04-v8.0-test-ppc64le:
  needs: ["ubuntu16.04-v8.0-ppc64le"]
  <<: *test_definition
  <<: *ubuntu16_04_8_0_ppc64le_only

ubuntu16.04-v8.0-scan-ppc64le:
  needs: ["ubuntu16.04-v8.0-ppc64le", "ubuntu16.04-v8.0-test-ppc64le"]
  <<: *scan_definition
  <<: *ubuntu16_04_8_0_ppc64le_only

ubuntu16.04-v8.0-deploy-ppc64le:
  <<: *deploy_definition
  <<: *ubuntu16_04_8_0_ppc64le_only
  needs:
    - job: ubuntu16.04-v8.0-test-ppc64le
      artifacts: true
    - job: ubuntu16.04-v8.0-scan-ppc64le
    - job: ubuntu16.04-v8.0-cudnn7-ppc64le
    - job: ubuntu16.04-v8.0-cudnn6-ppc64le
    - job: ubuntu16.04-v8.0-cudnn5-ppc64le

.centos7_8_0_x86_64_variables: &centos7_8_0_x86_64_variables
  ARCH: "x86_64"
  DIST_BASE_PATH: "dist/8.0"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda"
  MANIFEST: "manifests/cuda.yaml"
  OS: "centos7"
  OS_NAME: "centos"
  OS_VERSION: "7"
  CUDA_VERSION: "8.0"

.centos7_8_0_x86_64_only: &centos7_8_0_x86_64_only
  variables:
    <<: *centos7_8_0_x86_64_variables
  only:
    variables:
      - $centos7_8_0_x86_64 == "true"
      - $all == "true"

centos7-v8.0-x86_64:
  <<: *cuda_definition_deprecated
  <<: *centos7_8_0_x86_64_only

centos7-v8.0-cudnn7-x86_64:
  <<: *cudnn_definition
  <<: *centos7_8_0_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *centos7_8_0_x86_64_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: centos7-v8.0-x86_64
      artifacts: true

centos7-v8.0-cudnn6-x86_64:
  <<: *cudnn_definition
  <<: *centos7_8_0_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *centos7_8_0_x86_64_variables
    CUDNN_VERSION: "cudnn6"
  artifacts:
    reports:
      dotenv: cudnn6finaltags.env
  needs:
    - job: centos7-v8.0-x86_64
      artifacts: true

centos7-v8.0-cudnn5-x86_64:
  <<: *cudnn_definition
  <<: *centos7_8_0_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *centos7_8_0_x86_64_variables
    CUDNN_VERSION: "cudnn5"
  artifacts:
    reports:
      dotenv: cudnn5finaltags.env
  needs:
    - job: centos7-v8.0-x86_64
      artifacts: true

centos7-v8.0-test-x86_64:
  needs: ["centos7-v8.0-x86_64"]
  <<: *test_definition
  <<: *centos7_8_0_x86_64_only

centos7-v8.0-scan-x86_64:
  needs: ["centos7-v8.0-x86_64", "centos7-v8.0-test-x86_64"]
  <<: *scan_definition
  <<: *centos7_8_0_x86_64_only

centos7-v8.0-deploy-x86_64:
  <<: *deploy_definition
  <<: *centos7_8_0_x86_64_only
  needs:
    - job: centos7-v8.0-test-x86_64
      artifacts: true
    - job: centos7-v8.0-scan-x86_64
    - job: centos7-v8.0-cudnn7-x86_64
    - job: centos7-v8.0-cudnn6-x86_64
    - job: centos7-v8.0-cudnn5-x86_64

.centos7_8_0_ppc64le_variables: &centos7_8_0_ppc64le_variables
  ARCH: "ppc64le"
  DIST_BASE_PATH: "dist/8.0"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda/cuda-ppc64le"
  MANIFEST: "manifests/cuda.yaml"
  OS: "centos7"
  OS_NAME: "centos"
  OS_VERSION: "7"
  CUDA_VERSION: "8.0"

.centos7_8_0_ppc64le_only: &centos7_8_0_ppc64le_only
  variables:
    <<: *centos7_8_0_ppc64le_variables
  only:
    variables:
      - $centos7_8_0_ppc64le == "true"
      - $all == "true"

centos7-v8.0-ppc64le:
  <<: *cuda_definition_deprecated
  <<: *centos7_8_0_ppc64le_only

centos7-v8.0-cudnn7-ppc64le:
  <<: *cudnn_definition
  <<: *centos7_8_0_ppc64le_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *centos7_8_0_ppc64le_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: centos7-v8.0-ppc64le
      artifacts: true

centos7-v8.0-cudnn6-ppc64le:
  <<: *cudnn_definition
  <<: *centos7_8_0_ppc64le_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *centos7_8_0_ppc64le_variables
    CUDNN_VERSION: "cudnn6"
  artifacts:
    reports:
      dotenv: cudnn6finaltags.env
  needs:
    - job: centos7-v8.0-ppc64le
      artifacts: true

centos7-v8.0-cudnn5-ppc64le:
  <<: *cudnn_definition
  <<: *centos7_8_0_ppc64le_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *centos7_8_0_ppc64le_variables
    CUDNN_VERSION: "cudnn5"
  artifacts:
    reports:
      dotenv: cudnn5finaltags.env
  needs:
    - job: centos7-v8.0-ppc64le
      artifacts: true

centos7-v8.0-test-ppc64le:
  needs: ["centos7-v8.0-ppc64le"]
  <<: *test_definition
  <<: *centos7_8_0_ppc64le_only

centos7-v8.0-scan-ppc64le:
  needs: ["centos7-v8.0-ppc64le", "centos7-v8.0-test-ppc64le"]
  <<: *scan_definition
  <<: *centos7_8_0_ppc64le_only

centos7-v8.0-deploy-ppc64le:
  <<: *deploy_definition
  <<: *centos7_8_0_ppc64le_only
  needs:
    - job: centos7-v8.0-test-ppc64le
      artifacts: true
    - job: centos7-v8.0-scan-ppc64le
    - job: centos7-v8.0-cudnn7-ppc64le
    - job: centos7-v8.0-cudnn6-ppc64le
    - job: centos7-v8.0-cudnn5-ppc64le

.centos6_8_0_x86_64_variables: &centos6_8_0_x86_64_variables
  ARCH: "x86_64"
  DIST_BASE_PATH: "dist/8.0"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda"
  MANIFEST: "manifests/cuda.yaml"
  OS: "centos6"
  OS_NAME: "centos"
  OS_VERSION: "6"
  CUDA_VERSION: "8.0"

.centos6_8_0_x86_64_only: &centos6_8_0_x86_64_only
  variables:
    <<: *centos6_8_0_x86_64_variables
  only:
    variables:
      - $centos6_8_0_x86_64 == "true"
      - $all == "true"

centos6-v8.0-x86_64:
  <<: *cuda_definition_deprecated
  <<: *centos6_8_0_x86_64_only

centos6-v8.0-cudnn7-x86_64:
  <<: *cudnn_definition
  <<: *centos6_8_0_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *centos6_8_0_x86_64_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: centos6-v8.0-x86_64
      artifacts: true

centos6-v8.0-cudnn6-x86_64:
  <<: *cudnn_definition
  <<: *centos6_8_0_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *centos6_8_0_x86_64_variables
    CUDNN_VERSION: "cudnn6"
  artifacts:
    reports:
      dotenv: cudnn6finaltags.env
  needs:
    - job: centos6-v8.0-x86_64
      artifacts: true

centos6-v8.0-cudnn5-x86_64:
  <<: *cudnn_definition
  <<: *centos6_8_0_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *centos6_8_0_x86_64_variables
    CUDNN_VERSION: "cudnn5"
  artifacts:
    reports:
      dotenv: cudnn5finaltags.env
  needs:
    - job: centos6-v8.0-x86_64
      artifacts: true

centos6-v8.0-test-x86_64:
  needs: ["centos6-v8.0-x86_64"]
  <<: *test_definition
  <<: *centos6_8_0_x86_64_only

centos6-v8.0-scan-x86_64:
  needs: ["centos6-v8.0-x86_64", "centos6-v8.0-test-x86_64"]
  <<: *scan_definition
  <<: *centos6_8_0_x86_64_only

centos6-v8.0-deploy-x86_64:
  <<: *deploy_definition
  <<: *centos6_8_0_x86_64_only
  needs:
    - job: centos6-v8.0-test-x86_64
      artifacts: true
    - job: centos6-v8.0-scan-x86_64
    - job: centos6-v8.0-cudnn7-x86_64
    - job: centos6-v8.0-cudnn6-x86_64
    - job: centos6-v8.0-cudnn5-x86_64

.ubi7_8_0_x86_64_variables: &ubi7_8_0_x86_64_variables
  ARCH: "x86_64"
  DIST_BASE_PATH: "dist/8.0"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda"
  MANIFEST: "manifests/cuda.yaml"
  OS: "ubi7"
  OS_NAME: "ubi"
  OS_VERSION: "7"
  CUDA_VERSION: "8.0"

.ubi7_8_0_x86_64_only: &ubi7_8_0_x86_64_only
  variables:
    <<: *ubi7_8_0_x86_64_variables
  only:
    variables:
      - $ubi7_8_0_x86_64 == "true"
      - $all == "true"

ubi7-v8.0-x86_64:
  <<: *cuda_definition_deprecated
  <<: *ubi7_8_0_x86_64_only

ubi7-v8.0-cudnn7-x86_64:
  <<: *cudnn_definition
  <<: *ubi7_8_0_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubi7_8_0_x86_64_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: ubi7-v8.0-x86_64
      artifacts: true

ubi7-v8.0-cudnn6-x86_64:
  <<: *cudnn_definition
  <<: *ubi7_8_0_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubi7_8_0_x86_64_variables
    CUDNN_VERSION: "cudnn6"
  artifacts:
    reports:
      dotenv: cudnn6finaltags.env
  needs:
    - job: ubi7-v8.0-x86_64
      artifacts: true

ubi7-v8.0-cudnn5-x86_64:
  <<: *cudnn_definition
  <<: *ubi7_8_0_x86_64_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubi7_8_0_x86_64_variables
    CUDNN_VERSION: "cudnn5"
  artifacts:
    reports:
      dotenv: cudnn5finaltags.env
  needs:
    - job: ubi7-v8.0-x86_64
      artifacts: true

ubi7-v8.0-test-x86_64:
  needs: ["ubi7-v8.0-x86_64"]
  <<: *test_definition
  <<: *ubi7_8_0_x86_64_only

ubi7-v8.0-scan-x86_64:
  needs: ["ubi7-v8.0-x86_64", "ubi7-v8.0-test-x86_64"]
  <<: *scan_definition
  <<: *ubi7_8_0_x86_64_only

ubi7-v8.0-deploy-x86_64:
  <<: *deploy_definition
  <<: *ubi7_8_0_x86_64_only
  needs:
    - job: ubi7-v8.0-test-x86_64
      artifacts: true
    - job: ubi7-v8.0-scan-x86_64
    - job: ubi7-v8.0-cudnn7-x86_64
    - job: ubi7-v8.0-cudnn6-x86_64
    - job: ubi7-v8.0-cudnn5-x86_64

.ubi7_8_0_ppc64le_variables: &ubi7_8_0_ppc64le_variables
  ARCH: "ppc64le"
  DIST_BASE_PATH: "dist/8.0"
  IMAGE_NAME: "gitlab-master.nvidia.com:5005/cuda-installer/cuda/cuda-ppc64le"
  MANIFEST: "manifests/cuda.yaml"
  OS: "ubi7"
  OS_NAME: "ubi"
  OS_VERSION: "7"
  CUDA_VERSION: "8.0"

.ubi7_8_0_ppc64le_only: &ubi7_8_0_ppc64le_only
  variables:
    <<: *ubi7_8_0_ppc64le_variables
  only:
    variables:
      - $ubi7_8_0_ppc64le == "true"
      - $all == "true"

ubi7-v8.0-ppc64le:
  <<: *cuda_definition_deprecated
  <<: *ubi7_8_0_ppc64le_only

ubi7-v8.0-cudnn7-ppc64le:
  <<: *cudnn_definition
  <<: *ubi7_8_0_ppc64le_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubi7_8_0_ppc64le_variables
    CUDNN_VERSION: "cudnn7"
  artifacts:
    reports:
      dotenv: cudnn7finaltags.env
  needs:
    - job: ubi7-v8.0-ppc64le
      artifacts: true

ubi7-v8.0-cudnn6-ppc64le:
  <<: *cudnn_definition
  <<: *ubi7_8_0_ppc64le_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubi7_8_0_ppc64le_variables
    CUDNN_VERSION: "cudnn6"
  artifacts:
    reports:
      dotenv: cudnn6finaltags.env
  needs:
    - job: ubi7-v8.0-ppc64le
      artifacts: true

ubi7-v8.0-cudnn5-ppc64le:
  <<: *cudnn_definition
  <<: *ubi7_8_0_ppc64le_only
  # Variables overwritten here. Don't move this section.
  variables:
    <<: *ubi7_8_0_ppc64le_variables
    CUDNN_VERSION: "cudnn5"
  artifacts:
    reports:
      dotenv: cudnn5finaltags.env
  needs:
    - job: ubi7-v8.0-ppc64le
      artifacts: true

ubi7-v8.0-test-ppc64le:
  needs: ["ubi7-v8.0-ppc64le"]
  <<: *test_definition
  <<: *ubi7_8_0_ppc64le_only

ubi7-v8.0-scan-ppc64le:
  needs: ["ubi7-v8.0-ppc64le", "ubi7-v8.0-test-ppc64le"]
  <<: *scan_definition
  <<: *ubi7_8_0_ppc64le_only

ubi7-v8.0-deploy-ppc64le:
  <<: *deploy_definition
  <<: *ubi7_8_0_ppc64le_only
  needs:
    - job: ubi7-v8.0-test-ppc64le
      artifacts: true
    - job: ubi7-v8.0-scan-ppc64le
    - job: ubi7-v8.0-cudnn7-ppc64le
    - job: ubi7-v8.0-cudnn6-ppc64le
    - job: ubi7-v8.0-cudnn5-ppc64le

