ARG IMAGE_NAME
FROM ${IMAGE_NAME}:{{ cuda.version.release_label }}-runtime-{{ cuda.os.distro }}{{ cuda.os.version }}{{ cuda.image_tag_suffix if "image_tag_suffix" in cuda }} as base

ENV NV_CUDA_LIB_VERSION "{{ cuda.version.release_label + "-1" }}"
ENV NV_LIBCUBLAS_PACKAGE_NAME_DEV "libcublas-dev-{{ cuda.version.major }}-{{ cuda.version.minor }}"

FROM base as base-amd64

ENV NV_CUDA_CUDART_DEV_VERSION "{{ cuda.x86_64.components.cudart_dev.version }}"
ENV NV_NVML_DEV_VERSION "{{ cuda.x86_64.components.nvml_dev.version }}"
ENV NV_LIBCUSPARSE_DEV_VERSION "{{ cuda.x86_64.components.libcusparse_dev.version }}"
ENV NV_LIBNPP_DEV_VERSION "{{ cuda.x86_64.components.libnpp_dev.version }}"
ENV NV_LIBCUBLAS_DEV_VERSION "{{ cuda.x86_64.components.libcublas_dev.version }}"

{% if "libnccl2" in cuda.x86_64.components and cuda.x86_64.components.libnccl2 and "libnccl2_dev" in cuda.x86_64.components and cuda.x86_64.components.libnccl2_dev %}
ENV NCCL_VERSION {{ cuda.x86_64.components.libnccl2_dev.version[:-2] }}
ENV NV_LIBNCCL_PACKAGE_DEV "{{ "libnccl-dev=%s+cuda%s.%s" | format(cuda.x86_64.components.libnccl2_dev.version, cuda.version.major, cuda.version.minor) }}"
ENV NV_LIBNCCL_PACKAGE_NAME_DEV "libnccl-dev"

{% endif -%}

{% if "arm64" in cuda %}
FROM base as base-arm64

{# [> L4T uses older packaging name format for libcublas <] #}
{# {% if cuda.version.major_minor in ["10.2"] %} #}
{#     {% set libcublas_dev_pkg_name = "libcublas-dev" -%} #}
{#     {% set libcublas_dev_component_version = cuda.components.libcublas.version %} #}
{# {% endif -%} #}

ENV NV_CUDA_CUDART_DEV_VERSION "{{ cuda.arm64.components.cudart_dev.version }}"
ENV NV_NVML_DEV_VERSION "{{ cuda.arm64.components.nvml_dev.version }}"
ENV NV_LIBCUSPARSE_DEV_VERSION "{{ cuda.arm64.components.libcusparse_dev.version }}"
ENV NV_LIBNPP_DEV_VERSION "{{ cuda.arm64.components.libnpp_dev.version }}"
ENV NV_LIBCUBLAS_DEV_VERSION "{{ cuda.arm64.components.libcublas_dev.version }}"

{% if "libnccl2" in cuda.arm64.components and cuda.arm64.components.libnccl2 and "libnccl2_dev" in cuda.arm64.components and cuda.arm64.components.libnccl2_dev %}
ENV NCCL_VERSION {{ cuda.arm64.components.libnccl2_dev.version[:-2] }}
ENV NV_LIBNCCL_PACKAGE_DEV "{{ "libnccl-dev=%s+cuda%s.%s" | format(cuda.arm64.components.libnccl2_dev.version, cuda.version.major, cuda.version.minor) }}"
ENV NV_LIBNCCL_PACKAGE_NAME_DEV "libnccl-dev"

{% endif -%}
{% endif -%}

{% if "ppc64le" in cuda %}
FROM base as base-ppc64le

ENV NV_CUDA_CUDART_DEV_VERSION "{{ cuda.ppc64le.components.cudart_dev.version }}"
ENV NV_NVML_DEV_VERSION "{{ cuda.ppc64le.components.nvml_dev.version }}"
ENV NV_LIBCUSPARSE_DEV_VERSION "{{ cuda.ppc64le.components.libcusparse_dev.version }}"
ENV NV_LIBNPP_DEV_VERSION "{{ cuda.ppc64le.components.libnpp_dev.version }}"
ENV NV_LIBCUBLAS_DEV_VERSION "{{ cuda.ppc64le.components.libcublas_dev.version }}"

{% if "libnccl2" in cuda.ppc64le.components and cuda.ppc64le.components.libnccl2 and "libnccl2_dev" in cuda.ppc64le.components and cuda.ppc64le.components.libnccl2_dev %}
ENV NCCL_VERSION {{ cuda.ppc64le.components.libnccl2_dev.version[:-2] }}
ENV NV_LIBNCCL_PACKAGE_DEV "{{ "libnccl-dev=%s+cuda%s.%s" | format(cuda.ppc64le.components.libnccl2_dev.version, cuda.version.major, cuda.version.minor) }}"
ENV NV_LIBNCCL_PACKAGE_NAME_DEV "libnccl-dev"

{% endif -%}

{% endif -%}

FROM base-${TARGETARCH}

ARG TARGETARCH

LABEL maintainer "NVIDIA CORPORATION <cudatools@nvidia.com>"

RUN apt-get update && apt-get install -y --no-install-recommends \
{% if cuda.os.version == "20.04" %}
    libtinfo5 libncursesw5 \
{% endif %}
    cuda-cudart-dev-{{ cuda.version.major }}-{{ cuda.version.minor }}=${NV_CUDA_CUDART_DEV_VERSION} \
    cuda-command-line-tools-{{ cuda.version.major }}-{{ cuda.version.minor }}=${NV_CUDA_LIB_VERSION} \
    cuda-minimal-build-{{ cuda.version.major }}-{{ cuda.version.minor }}=${NV_CUDA_LIB_VERSION} \
    cuda-libraries-dev-{{ cuda.version.major }}-{{ cuda.version.minor }}=${NV_CUDA_LIB_VERSION} \
    cuda-nvml-dev-{{ cuda.version.major }}-{{ cuda.version.minor }}=${NV_NVML_DEV_VERSION} \
    libnpp-dev-{{ cuda.version.major }}-{{ cuda.version.minor }}=${NV_LIBNPP_DEV_VERSION} \
    libcusparse-dev-{{ cuda.version.major }}-{{ cuda.version.minor }}=${NV_LIBCUSPARSE_DEV_VERSION} \
    ${NV_LIBNCCL_PACKAGE_DEV} \
    ${NV_LIBCUBLAS_PACKAGE_NAME_DEV}=${NV_LIBCUBLAS_DEV_VERSION} \
    && rm -rf /var/lib/apt/lists/*

# apt from auto upgrading the cublas package. See https://gitlab.com/nvidia/container-images/cuda/-/issues/88
RUN apt-mark hold ${NV_LIBCUBLAS_PACKAGE_NAME_DEV} ${NV_LIBNCCL_PACKAGE_NAME_DEV}

{# {% if "libnccl2" in cuda.components and (cuda.components.libnccl2 and "source" in cuda.components.libnccl2) %} #}
{#     {% set arch = cuda.arch %} #}
{#     {% if cuda.arch == "arm64" %} {% set arch = "aarch64" %} {% endif %} #}
{#     {% set basename =  "nccl_" + cuda.components.libnccl2.version + "-1+cuda" + cuda.version.major + "." + cuda.version.minor + "_" + arch + ".txz" %} #}
{# RUN apt update && apt install curl xz-utils -y --no-install-recommends && NCCL_DOWNLOAD_SUM={{ cuda.components.libnccl2.sha256sum }} && \ #}
{#     curl -fsSL {{ cuda.components.libnccl2.source }} -O && \ #}
{#     echo "$NCCL_DOWNLOAD_SUM  {{ basename }}" | sha256sum -c - && \ #}
{#     tar --no-same-owner --keep-old-files --lzma -xvf  {{ basename }} -C /usr/local/cuda/include/ --strip-components=2 --wildcards '*/include/*' && \ #}
{#     tar --no-same-owner --keep-old-files --lzma -xvf  {{ basename }} -C /usr/local/cuda/lib64/ --strip-components=2 --wildcards '*/lib/libnccl.so' && \ #}
{#     rm {{ basename }} && \ #}
{#     ldconfig && rm -rf /var/lib/apt/lists/* #}

{# {% endif %} #}
ENV LIBRARY_PATH /usr/local/cuda/lib64/stubs
